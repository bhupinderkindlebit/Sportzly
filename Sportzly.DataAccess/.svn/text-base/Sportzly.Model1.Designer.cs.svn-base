//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Activities_Activities", "Activities", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.Activity), "Activities1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Activity), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Activities_AlbumPhotos", "AlbumPhotos", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.AlbumPhoto), "Activities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Activity), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_ActivityGroup_Activities", "Activities", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Activity), "ActivityGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.ActivityGroup), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_ActivityPersonal_Activities", "Activities", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Activity), "ActivityPersonal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.ActivityPersonal), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_ActivityTeam_Activities", "Activities", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Activity), "ActivityTeam", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.ActivityTeam), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbActivities_tbUsers", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "Activities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Activity), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbActivityLikes_tbActivities", "Activities", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Activity), "ActivityCheers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.ActivityCheer), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbActivityLikes_tbUsers", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "ActivityCheers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.ActivityCheer), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbActivityGroup_tbGroups", "Groups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Group), "ActivityGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.ActivityGroup), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_ActivityPersonal_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "ActivityPersonal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.ActivityPersonal), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_ActivityTeam_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Team), "ActivityTeam", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.ActivityTeam), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Address_Locality", "Locality", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Locality), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Address), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Schools_Address", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Address), "Schools", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.School), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Users_Address", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.Address), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.User), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbAlbumContents_tbAlbums", "Albums", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.Album), "AlbumPhotos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.AlbumPhoto), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbAlbumContents_tbUsers", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "AlbumPhotos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.AlbumPhoto), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbEventGroup_tbEvents", "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Event), "EventGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.EventGroup), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbEventGroup_tbGroups", "Groups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Group), "EventGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.EventGroup), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbEventPersonal_tbEvents", "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Event), "EventPersonal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.EventPersonal), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbEventPersonal_tbUsers", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "EventPersonal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.EventPersonal), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbEvents_tbEvents", "EventTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.EventType), "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Event), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbEvents_tbUsers", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Event), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbEventStatus_tbEvents", "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Event), "EventStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.EventStatu), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbEventTeam_tbEvents", "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Event), "EventTeam", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.EventTeam), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbEventTeam_tbTeams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Team), "EventTeam", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.EventTeam), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbFollowers_follower", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "Followers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Follower), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbFollowers_following", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "Followers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Follower), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Friends_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "Friends", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Friend), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbFriends_User", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "Friends", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Friend), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Users_Genders", "Genders", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.Gender), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.User), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbGroups_tbGroupAccessTypes", "GroupAccessTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.GroupAccessType), "Groups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Group), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbGroupAttributes_tbGroups", "Groups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Group), "GroupAttributes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.GroupAttribute), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbGroups_tbGroupCategories", "GroupCategories", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.GroupCategory), "Groups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Group), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbUserGroups_tbGroups", "Groups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Group), "GroupMembers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.GroupMember), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbUserGroups_tbUsers", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.User), "GroupMembers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.GroupMember), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbGroups_author", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "Groups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Group), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbGroupSports_tbGroups", "Groups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Group), "GroupSports", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.GroupSport), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbGroupSports_tbTeamSports", "Sports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Sport), "GroupSports", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.GroupSport), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbUsers_tbUsers", "MaritalStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.MaritalStatu), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.User), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Metrics_MetricKeys", "MetricKeys", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.MetricKey), "Metrics", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Metric), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Metrics_MetricValues", "MetricValues", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.MetricValue), "Metrics", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Metric), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_UserMetrics_Metrics", "Metrics", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Metric), "UserMetrics", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.UserMetric), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Users_Photos", "Photos", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.Photo), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.User), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Schools_SchoolTypes", "SchoolTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.SchoolType), "Schools", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.School), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_UserSchools_Schools", "Schools", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.School), "UserSchools", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.UserSchool), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbTeams_tbTeamSports", "Sports", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.Sport), "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Team), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbUserFavoriteSport_tbTeamSports", "Sports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Sport), "UserFavoriteSport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.UserFavoriteSport), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbUserSportTag_tbSportTags", "SportTags", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.SportTag), "UserSportTags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.UserSportTag), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbTeams_tbTeamCategories", "TeamCategories", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.TeamCategory), "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Team), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbTeamFollowers_tbTeams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Team), "TeamFollowers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.TeamFollower), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbTeamFollowers_tbUsers", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "TeamFollowers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.TeamFollower), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbTeamsGames_tbTeams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Team), "TeamGames", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.TeamGame), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_TeamHistory_TeamLeagues", "TeamLeagues", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.TeamLeague), "TeamHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.TeamHistory), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_TeamHistory_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Team), "TeamHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.TeamHistory), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbTeamInventory_tbTeams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Team), "TeamInventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.TeamInventory), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbTeamLeagueTeams_tbTeamLeagues", "TeamLeagues", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.TeamLeague), "TeamLeagueTeams", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.TeamLeagueTeam), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbTeamLeagueTeams_tbTeams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Team), "TeamLeagueTeams", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.TeamLeagueTeam), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbTeamMembers_tbTeamMemberRoles", "TeamMemberRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.TeamMemberRole), "TeamMembers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.TeamMember), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbTeamMembers_tbTeams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.Team), "TeamMembers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.TeamMember), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbTeamMembers_tbUsers", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.User), "TeamMembers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.TeamMember), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbTeamNoticBoardMember_tbTeamNoticBoardMember", "TeamNoticeBoard", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.TeamNoticeBoard), "TeamNoticBoardMember", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.TeamNoticBoardMember), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbTeamNoticBoardMember_tbUsers", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "TeamNoticBoardMember", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.TeamNoticBoardMember), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbTeamNoticeBoard_tbTeams1", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.Team), "TeamNoticeBoard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.TeamNoticeBoard), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbTeamNoticeBoard_tbUsers", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.User), "TeamNoticeBoard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.TeamNoticeBoard), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbTeams_tbUsers", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Team), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_TeamScheduleDetails_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Team), "TeamScheduleDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.TeamScheduleDetail), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_TeamSchedules_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Team), "TeamSchedules", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.TeamSchedule), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_TeamScheduleDetails_TeamSchedules", "TeamSchedules", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.TeamSchedule), "TeamScheduleDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.TeamScheduleDetail), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbUserFavoriteSport_tbUsers", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "UserFavoriteSport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.UserFavoriteSport), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_UserMetrics_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "UserMetrics", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.UserMetric), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_tbUserSportTag_tbUsers", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "UserSportTags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.UserSportTag), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_UserSchools_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "UserSchools", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.UserSchool), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_UserSocialLinks_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "UserSocialLinks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.UserSocialLink), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Awards_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "Award", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Award), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Activities_Albums", "Album", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.Album), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Activity), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Activities_AlbumPhotos1", "AlbumPhoto", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.AlbumPhoto), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Activity), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_DocumentTitle_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "DocumentTitle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.DocumentTitle), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Files_DocumentTitle", "DocumentTitle", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.DocumentTitle), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.DocFile), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Files_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.User), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.DocFile), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Activities_DocumentTitle", "DocumentTitle", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.DocumentTitle), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Activity), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Activities_Videos", "Video", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.Video), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Activity), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Users_Carrier", "Carrier", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.Carrier), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.User), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Users_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "User1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.User), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_InviteEmailaddress_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.User), "InviteEmailaddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.InviteEmailaddress), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_InviteEmailaddress_Teams", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.Team), "InviteEmailaddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.InviteEmailaddress), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Calendar_Calendar", "Calendar", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.Calendar), "Calendar1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Calendar), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Calendar_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "Calendar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Calendar), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_CalendarAttendees_Calendar", "Calendar", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Calendar), "CalendarAttendee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.CalendarAttendee), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Result_Calendar", "Calendar", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Calendar), "Result", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Result), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_TeamAdmin_Teams", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.Team), "TeamAdmin", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.TeamAdmin), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_TeamAdmin_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sportzly.DataAccess.User), "TeamAdmin", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.TeamAdmin), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_PollOptions_Polls", "Poll", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.Poll), "PollOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.PollOption), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Votes_PollOptions", "PollOption", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.PollOption), "Vote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Vote), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Polls_Teams", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.Team), "Poll", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Poll), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Polls_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.User), "Poll", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Poll), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Votes_Polls", "Poll", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.Poll), "Vote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Vote), true)]
[assembly: EdmRelationshipAttribute("Sportzly.Model", "FK_Votes_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sportzly.DataAccess.User), "Vote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sportzly.DataAccess.Vote), true)]

#endregion

namespace Sportzly.DataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SportzlyDataContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SportzlyDataContext object using the connection string found in the 'SportzlyDataContext' section of the application configuration file.
        /// </summary>
        public SportzlyDataContext() : base("name=SportzlyDataContext", "SportzlyDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SportzlyDataContext object.
        /// </summary>
        public SportzlyDataContext(string connectionString) : base(connectionString, "SportzlyDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SportzlyDataContext object.
        /// </summary>
        public SportzlyDataContext(EntityConnection connection) : base(connection, "SportzlyDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Activity> Activities
        {
            get
            {
                if ((_Activities == null))
                {
                    _Activities = base.CreateObjectSet<Activity>("Activities");
                }
                return _Activities;
            }
        }
        private ObjectSet<Activity> _Activities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActivityCheer> ActivityCheers
        {
            get
            {
                if ((_ActivityCheers == null))
                {
                    _ActivityCheers = base.CreateObjectSet<ActivityCheer>("ActivityCheers");
                }
                return _ActivityCheers;
            }
        }
        private ObjectSet<ActivityCheer> _ActivityCheers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActivityGroup> ActivityGroups
        {
            get
            {
                if ((_ActivityGroups == null))
                {
                    _ActivityGroups = base.CreateObjectSet<ActivityGroup>("ActivityGroups");
                }
                return _ActivityGroups;
            }
        }
        private ObjectSet<ActivityGroup> _ActivityGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActivityPersonal> ActivityPersonals
        {
            get
            {
                if ((_ActivityPersonals == null))
                {
                    _ActivityPersonals = base.CreateObjectSet<ActivityPersonal>("ActivityPersonals");
                }
                return _ActivityPersonals;
            }
        }
        private ObjectSet<ActivityPersonal> _ActivityPersonals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActivityTeam> ActivityTeams
        {
            get
            {
                if ((_ActivityTeams == null))
                {
                    _ActivityTeams = base.CreateObjectSet<ActivityTeam>("ActivityTeams");
                }
                return _ActivityTeams;
            }
        }
        private ObjectSet<ActivityTeam> _ActivityTeams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Address>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Address> _Addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AlbumPhoto> AlbumPhotos
        {
            get
            {
                if ((_AlbumPhotos == null))
                {
                    _AlbumPhotos = base.CreateObjectSet<AlbumPhoto>("AlbumPhotos");
                }
                return _AlbumPhotos;
            }
        }
        private ObjectSet<AlbumPhoto> _AlbumPhotos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Album> Albums
        {
            get
            {
                if ((_Albums == null))
                {
                    _Albums = base.CreateObjectSet<Album>("Albums");
                }
                return _Albums;
            }
        }
        private ObjectSet<Album> _Albums;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ErrorLog> ErrorLogs
        {
            get
            {
                if ((_ErrorLogs == null))
                {
                    _ErrorLogs = base.CreateObjectSet<ErrorLog>("ErrorLogs");
                }
                return _ErrorLogs;
            }
        }
        private ObjectSet<ErrorLog> _ErrorLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventGroup> EventGroups
        {
            get
            {
                if ((_EventGroups == null))
                {
                    _EventGroups = base.CreateObjectSet<EventGroup>("EventGroups");
                }
                return _EventGroups;
            }
        }
        private ObjectSet<EventGroup> _EventGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventPersonal> EventPersonals
        {
            get
            {
                if ((_EventPersonals == null))
                {
                    _EventPersonals = base.CreateObjectSet<EventPersonal>("EventPersonals");
                }
                return _EventPersonals;
            }
        }
        private ObjectSet<EventPersonal> _EventPersonals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventStatu> EventStatus
        {
            get
            {
                if ((_EventStatus == null))
                {
                    _EventStatus = base.CreateObjectSet<EventStatu>("EventStatus");
                }
                return _EventStatus;
            }
        }
        private ObjectSet<EventStatu> _EventStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventTeam> EventTeams
        {
            get
            {
                if ((_EventTeams == null))
                {
                    _EventTeams = base.CreateObjectSet<EventTeam>("EventTeams");
                }
                return _EventTeams;
            }
        }
        private ObjectSet<EventTeam> _EventTeams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventType> EventTypes
        {
            get
            {
                if ((_EventTypes == null))
                {
                    _EventTypes = base.CreateObjectSet<EventType>("EventTypes");
                }
                return _EventTypes;
            }
        }
        private ObjectSet<EventType> _EventTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Follower> Followers
        {
            get
            {
                if ((_Followers == null))
                {
                    _Followers = base.CreateObjectSet<Follower>("Followers");
                }
                return _Followers;
            }
        }
        private ObjectSet<Follower> _Followers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Friend> Friends
        {
            get
            {
                if ((_Friends == null))
                {
                    _Friends = base.CreateObjectSet<Friend>("Friends");
                }
                return _Friends;
            }
        }
        private ObjectSet<Friend> _Friends;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Gender> Genders
        {
            get
            {
                if ((_Genders == null))
                {
                    _Genders = base.CreateObjectSet<Gender>("Genders");
                }
                return _Genders;
            }
        }
        private ObjectSet<Gender> _Genders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GroupAccessType> GroupAccessTypes
        {
            get
            {
                if ((_GroupAccessTypes == null))
                {
                    _GroupAccessTypes = base.CreateObjectSet<GroupAccessType>("GroupAccessTypes");
                }
                return _GroupAccessTypes;
            }
        }
        private ObjectSet<GroupAccessType> _GroupAccessTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GroupAttribute> GroupAttributes
        {
            get
            {
                if ((_GroupAttributes == null))
                {
                    _GroupAttributes = base.CreateObjectSet<GroupAttribute>("GroupAttributes");
                }
                return _GroupAttributes;
            }
        }
        private ObjectSet<GroupAttribute> _GroupAttributes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GroupCategory> GroupCategories
        {
            get
            {
                if ((_GroupCategories == null))
                {
                    _GroupCategories = base.CreateObjectSet<GroupCategory>("GroupCategories");
                }
                return _GroupCategories;
            }
        }
        private ObjectSet<GroupCategory> _GroupCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GroupMember> GroupMembers
        {
            get
            {
                if ((_GroupMembers == null))
                {
                    _GroupMembers = base.CreateObjectSet<GroupMember>("GroupMembers");
                }
                return _GroupMembers;
            }
        }
        private ObjectSet<GroupMember> _GroupMembers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GroupSport> GroupSports
        {
            get
            {
                if ((_GroupSports == null))
                {
                    _GroupSports = base.CreateObjectSet<GroupSport>("GroupSports");
                }
                return _GroupSports;
            }
        }
        private ObjectSet<GroupSport> _GroupSports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Locality> Localities
        {
            get
            {
                if ((_Localities == null))
                {
                    _Localities = base.CreateObjectSet<Locality>("Localities");
                }
                return _Localities;
            }
        }
        private ObjectSet<Locality> _Localities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MaritalStatu> MaritalStatus
        {
            get
            {
                if ((_MaritalStatus == null))
                {
                    _MaritalStatus = base.CreateObjectSet<MaritalStatu>("MaritalStatus");
                }
                return _MaritalStatus;
            }
        }
        private ObjectSet<MaritalStatu> _MaritalStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MetricKey> MetricKeys
        {
            get
            {
                if ((_MetricKeys == null))
                {
                    _MetricKeys = base.CreateObjectSet<MetricKey>("MetricKeys");
                }
                return _MetricKeys;
            }
        }
        private ObjectSet<MetricKey> _MetricKeys;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Metric> Metrics
        {
            get
            {
                if ((_Metrics == null))
                {
                    _Metrics = base.CreateObjectSet<Metric>("Metrics");
                }
                return _Metrics;
            }
        }
        private ObjectSet<Metric> _Metrics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MetricValue> MetricValues
        {
            get
            {
                if ((_MetricValues == null))
                {
                    _MetricValues = base.CreateObjectSet<MetricValue>("MetricValues");
                }
                return _MetricValues;
            }
        }
        private ObjectSet<MetricValue> _MetricValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Photo> Photos
        {
            get
            {
                if ((_Photos == null))
                {
                    _Photos = base.CreateObjectSet<Photo>("Photos");
                }
                return _Photos;
            }
        }
        private ObjectSet<Photo> _Photos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<School> Schools
        {
            get
            {
                if ((_Schools == null))
                {
                    _Schools = base.CreateObjectSet<School>("Schools");
                }
                return _Schools;
            }
        }
        private ObjectSet<School> _Schools;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SchoolType> SchoolTypes
        {
            get
            {
                if ((_SchoolTypes == null))
                {
                    _SchoolTypes = base.CreateObjectSet<SchoolType>("SchoolTypes");
                }
                return _SchoolTypes;
            }
        }
        private ObjectSet<SchoolType> _SchoolTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sport> Sports
        {
            get
            {
                if ((_Sports == null))
                {
                    _Sports = base.CreateObjectSet<Sport>("Sports");
                }
                return _Sports;
            }
        }
        private ObjectSet<Sport> _Sports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SportTag> SportTags
        {
            get
            {
                if ((_SportTags == null))
                {
                    _SportTags = base.CreateObjectSet<SportTag>("SportTags");
                }
                return _SportTags;
            }
        }
        private ObjectSet<SportTag> _SportTags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamCategory> TeamCategories
        {
            get
            {
                if ((_TeamCategories == null))
                {
                    _TeamCategories = base.CreateObjectSet<TeamCategory>("TeamCategories");
                }
                return _TeamCategories;
            }
        }
        private ObjectSet<TeamCategory> _TeamCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamFollower> TeamFollowers
        {
            get
            {
                if ((_TeamFollowers == null))
                {
                    _TeamFollowers = base.CreateObjectSet<TeamFollower>("TeamFollowers");
                }
                return _TeamFollowers;
            }
        }
        private ObjectSet<TeamFollower> _TeamFollowers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamGame> TeamGames
        {
            get
            {
                if ((_TeamGames == null))
                {
                    _TeamGames = base.CreateObjectSet<TeamGame>("TeamGames");
                }
                return _TeamGames;
            }
        }
        private ObjectSet<TeamGame> _TeamGames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamHistory> TeamHistories
        {
            get
            {
                if ((_TeamHistories == null))
                {
                    _TeamHistories = base.CreateObjectSet<TeamHistory>("TeamHistories");
                }
                return _TeamHistories;
            }
        }
        private ObjectSet<TeamHistory> _TeamHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamInventory> TeamInventories
        {
            get
            {
                if ((_TeamInventories == null))
                {
                    _TeamInventories = base.CreateObjectSet<TeamInventory>("TeamInventories");
                }
                return _TeamInventories;
            }
        }
        private ObjectSet<TeamInventory> _TeamInventories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamLeague> TeamLeagues
        {
            get
            {
                if ((_TeamLeagues == null))
                {
                    _TeamLeagues = base.CreateObjectSet<TeamLeague>("TeamLeagues");
                }
                return _TeamLeagues;
            }
        }
        private ObjectSet<TeamLeague> _TeamLeagues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamLeagueTeam> TeamLeagueTeams
        {
            get
            {
                if ((_TeamLeagueTeams == null))
                {
                    _TeamLeagueTeams = base.CreateObjectSet<TeamLeagueTeam>("TeamLeagueTeams");
                }
                return _TeamLeagueTeams;
            }
        }
        private ObjectSet<TeamLeagueTeam> _TeamLeagueTeams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamMemberRole> TeamMemberRoles
        {
            get
            {
                if ((_TeamMemberRoles == null))
                {
                    _TeamMemberRoles = base.CreateObjectSet<TeamMemberRole>("TeamMemberRoles");
                }
                return _TeamMemberRoles;
            }
        }
        private ObjectSet<TeamMemberRole> _TeamMemberRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamMember> TeamMembers
        {
            get
            {
                if ((_TeamMembers == null))
                {
                    _TeamMembers = base.CreateObjectSet<TeamMember>("TeamMembers");
                }
                return _TeamMembers;
            }
        }
        private ObjectSet<TeamMember> _TeamMembers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamNoticBoardMember> TeamNoticBoardMembers
        {
            get
            {
                if ((_TeamNoticBoardMembers == null))
                {
                    _TeamNoticBoardMembers = base.CreateObjectSet<TeamNoticBoardMember>("TeamNoticBoardMembers");
                }
                return _TeamNoticBoardMembers;
            }
        }
        private ObjectSet<TeamNoticBoardMember> _TeamNoticBoardMembers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamNoticeBoard> TeamNoticeBoards
        {
            get
            {
                if ((_TeamNoticeBoards == null))
                {
                    _TeamNoticeBoards = base.CreateObjectSet<TeamNoticeBoard>("TeamNoticeBoards");
                }
                return _TeamNoticeBoards;
            }
        }
        private ObjectSet<TeamNoticeBoard> _TeamNoticeBoards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Team> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Team>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Team> _Teams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamScheduleDetail> TeamScheduleDetails
        {
            get
            {
                if ((_TeamScheduleDetails == null))
                {
                    _TeamScheduleDetails = base.CreateObjectSet<TeamScheduleDetail>("TeamScheduleDetails");
                }
                return _TeamScheduleDetails;
            }
        }
        private ObjectSet<TeamScheduleDetail> _TeamScheduleDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamSchedule> TeamSchedules
        {
            get
            {
                if ((_TeamSchedules == null))
                {
                    _TeamSchedules = base.CreateObjectSet<TeamSchedule>("TeamSchedules");
                }
                return _TeamSchedules;
            }
        }
        private ObjectSet<TeamSchedule> _TeamSchedules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserFavoriteSport> UserFavoriteSports
        {
            get
            {
                if ((_UserFavoriteSports == null))
                {
                    _UserFavoriteSports = base.CreateObjectSet<UserFavoriteSport>("UserFavoriteSports");
                }
                return _UserFavoriteSports;
            }
        }
        private ObjectSet<UserFavoriteSport> _UserFavoriteSports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserMetric> UserMetrics
        {
            get
            {
                if ((_UserMetrics == null))
                {
                    _UserMetrics = base.CreateObjectSet<UserMetric>("UserMetrics");
                }
                return _UserMetrics;
            }
        }
        private ObjectSet<UserMetric> _UserMetrics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserSchool> UserSchools
        {
            get
            {
                if ((_UserSchools == null))
                {
                    _UserSchools = base.CreateObjectSet<UserSchool>("UserSchools");
                }
                return _UserSchools;
            }
        }
        private ObjectSet<UserSchool> _UserSchools;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserSocialLink> UserSocialLinks
        {
            get
            {
                if ((_UserSocialLinks == null))
                {
                    _UserSocialLinks = base.CreateObjectSet<UserSocialLink>("UserSocialLinks");
                }
                return _UserSocialLinks;
            }
        }
        private ObjectSet<UserSocialLink> _UserSocialLinks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserSportTag> UserSportTags
        {
            get
            {
                if ((_UserSportTags == null))
                {
                    _UserSportTags = base.CreateObjectSet<UserSportTag>("UserSportTags");
                }
                return _UserSportTags;
            }
        }
        private ObjectSet<UserSportTag> _UserSportTags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Award> Awards
        {
            get
            {
                if ((_Awards == null))
                {
                    _Awards = base.CreateObjectSet<Award>("Awards");
                }
                return _Awards;
            }
        }
        private ObjectSet<Award> _Awards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invitation> Invitations
        {
            get
            {
                if ((_Invitations == null))
                {
                    _Invitations = base.CreateObjectSet<Invitation>("Invitations");
                }
                return _Invitations;
            }
        }
        private ObjectSet<Invitation> _Invitations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentTitle> DocumentTitles
        {
            get
            {
                if ((_DocumentTitles == null))
                {
                    _DocumentTitles = base.CreateObjectSet<DocumentTitle>("DocumentTitles");
                }
                return _DocumentTitles;
            }
        }
        private ObjectSet<DocumentTitle> _DocumentTitles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocFile> DocFiles
        {
            get
            {
                if ((_DocFiles == null))
                {
                    _DocFiles = base.CreateObjectSet<DocFile>("DocFiles");
                }
                return _DocFiles;
            }
        }
        private ObjectSet<DocFile> _DocFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Video> Videos
        {
            get
            {
                if ((_Videos == null))
                {
                    _Videos = base.CreateObjectSet<Video>("Videos");
                }
                return _Videos;
            }
        }
        private ObjectSet<Video> _Videos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Carrier> Carriers
        {
            get
            {
                if ((_Carriers == null))
                {
                    _Carriers = base.CreateObjectSet<Carrier>("Carriers");
                }
                return _Carriers;
            }
        }
        private ObjectSet<Carrier> _Carriers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InviteEmailaddress> InviteEmailaddresses
        {
            get
            {
                if ((_InviteEmailaddresses == null))
                {
                    _InviteEmailaddresses = base.CreateObjectSet<InviteEmailaddress>("InviteEmailaddresses");
                }
                return _InviteEmailaddresses;
            }
        }
        private ObjectSet<InviteEmailaddress> _InviteEmailaddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Calendar> Calendars
        {
            get
            {
                if ((_Calendars == null))
                {
                    _Calendars = base.CreateObjectSet<Calendar>("Calendars");
                }
                return _Calendars;
            }
        }
        private ObjectSet<Calendar> _Calendars;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CalendarAttendee> CalendarAttendees
        {
            get
            {
                if ((_CalendarAttendees == null))
                {
                    _CalendarAttendees = base.CreateObjectSet<CalendarAttendee>("CalendarAttendees");
                }
                return _CalendarAttendees;
            }
        }
        private ObjectSet<CalendarAttendee> _CalendarAttendees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Result> Results
        {
            get
            {
                if ((_Results == null))
                {
                    _Results = base.CreateObjectSet<Result>("Results");
                }
                return _Results;
            }
        }
        private ObjectSet<Result> _Results;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamAdmin> TeamAdmins
        {
            get
            {
                if ((_TeamAdmins == null))
                {
                    _TeamAdmins = base.CreateObjectSet<TeamAdmin>("TeamAdmins");
                }
                return _TeamAdmins;
            }
        }
        private ObjectSet<TeamAdmin> _TeamAdmins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Feed> Feeds
        {
            get
            {
                if ((_Feeds == null))
                {
                    _Feeds = base.CreateObjectSet<Feed>("Feeds");
                }
                return _Feeds;
            }
        }
        private ObjectSet<Feed> _Feeds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedContent> FeedContents
        {
            get
            {
                if ((_FeedContents == null))
                {
                    _FeedContents = base.CreateObjectSet<FeedContent>("FeedContents");
                }
                return _FeedContents;
            }
        }
        private ObjectSet<FeedContent> _FeedContents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PollOption> PollOptions
        {
            get
            {
                if ((_PollOptions == null))
                {
                    _PollOptions = base.CreateObjectSet<PollOption>("PollOptions");
                }
                return _PollOptions;
            }
        }
        private ObjectSet<PollOption> _PollOptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Poll> Polls
        {
            get
            {
                if ((_Polls == null))
                {
                    _Polls = base.CreateObjectSet<Poll>("Polls");
                }
                return _Polls;
            }
        }
        private ObjectSet<Poll> _Polls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vote> Votes
        {
            get
            {
                if ((_Votes == null))
                {
                    _Votes = base.CreateObjectSet<Vote>("Votes");
                }
                return _Votes;
            }
        }
        private ObjectSet<Vote> _Votes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Activities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivities(Activity activity)
        {
            base.AddObject("Activities", activity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActivityCheers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivityCheers(ActivityCheer activityCheer)
        {
            base.AddObject("ActivityCheers", activityCheer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActivityGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivityGroups(ActivityGroup activityGroup)
        {
            base.AddObject("ActivityGroups", activityGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActivityPersonals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivityPersonals(ActivityPersonal activityPersonal)
        {
            base.AddObject("ActivityPersonals", activityPersonal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActivityTeams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivityTeams(ActivityTeam activityTeam)
        {
            base.AddObject("ActivityTeams", activityTeam);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddresses(Address address)
        {
            base.AddObject("Addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AlbumPhotos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlbumPhotos(AlbumPhoto albumPhoto)
        {
            base.AddObject("AlbumPhotos", albumPhoto);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Albums EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlbums(Album album)
        {
            base.AddObject("Albums", album);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ErrorLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToErrorLogs(ErrorLog errorLog)
        {
            base.AddObject("ErrorLogs", errorLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventGroups(EventGroup eventGroup)
        {
            base.AddObject("EventGroups", eventGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventPersonals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventPersonals(EventPersonal eventPersonal)
        {
            base.AddObject("EventPersonals", eventPersonal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventStatus(EventStatu eventStatu)
        {
            base.AddObject("EventStatus", eventStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventTeams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTeams(EventTeam eventTeam)
        {
            base.AddObject("EventTeams", eventTeam);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTypes(EventType eventType)
        {
            base.AddObject("EventTypes", eventType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Followers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFollowers(Follower follower)
        {
            base.AddObject("Followers", follower);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Friends EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFriends(Friend friend)
        {
            base.AddObject("Friends", friend);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Genders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGenders(Gender gender)
        {
            base.AddObject("Genders", gender);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroupAccessTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroupAccessTypes(GroupAccessType groupAccessType)
        {
            base.AddObject("GroupAccessTypes", groupAccessType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroupAttributes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroupAttributes(GroupAttribute groupAttribute)
        {
            base.AddObject("GroupAttributes", groupAttribute);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroupCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroupCategories(GroupCategory groupCategory)
        {
            base.AddObject("GroupCategories", groupCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroupMembers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroupMembers(GroupMember groupMember)
        {
            base.AddObject("GroupMembers", groupMember);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroupSports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroupSports(GroupSport groupSport)
        {
            base.AddObject("GroupSports", groupSport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Localities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocalities(Locality locality)
        {
            base.AddObject("Localities", locality);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MaritalStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaritalStatus(MaritalStatu maritalStatu)
        {
            base.AddObject("MaritalStatus", maritalStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MetricKeys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMetricKeys(MetricKey metricKey)
        {
            base.AddObject("MetricKeys", metricKey);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Metrics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMetrics(Metric metric)
        {
            base.AddObject("Metrics", metric);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MetricValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMetricValues(MetricValue metricValue)
        {
            base.AddObject("MetricValues", metricValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Photos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhotos(Photo photo)
        {
            base.AddObject("Photos", photo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Schools EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSchools(School school)
        {
            base.AddObject("Schools", school);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SchoolTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSchoolTypes(SchoolType schoolType)
        {
            base.AddObject("SchoolTypes", schoolType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSports(Sport sport)
        {
            base.AddObject("Sports", sport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SportTags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSportTags(SportTag sportTag)
        {
            base.AddObject("SportTags", sportTag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamCategories(TeamCategory teamCategory)
        {
            base.AddObject("TeamCategories", teamCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamFollowers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamFollowers(TeamFollower teamFollower)
        {
            base.AddObject("TeamFollowers", teamFollower);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamGames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamGames(TeamGame teamGame)
        {
            base.AddObject("TeamGames", teamGame);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamHistories(TeamHistory teamHistory)
        {
            base.AddObject("TeamHistories", teamHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamInventories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamInventories(TeamInventory teamInventory)
        {
            base.AddObject("TeamInventories", teamInventory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamLeagues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamLeagues(TeamLeague teamLeague)
        {
            base.AddObject("TeamLeagues", teamLeague);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamLeagueTeams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamLeagueTeams(TeamLeagueTeam teamLeagueTeam)
        {
            base.AddObject("TeamLeagueTeams", teamLeagueTeam);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamMemberRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamMemberRoles(TeamMemberRole teamMemberRole)
        {
            base.AddObject("TeamMemberRoles", teamMemberRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamMembers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamMembers(TeamMember teamMember)
        {
            base.AddObject("TeamMembers", teamMember);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamNoticBoardMembers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamNoticBoardMembers(TeamNoticBoardMember teamNoticBoardMember)
        {
            base.AddObject("TeamNoticBoardMembers", teamNoticBoardMember);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamNoticeBoards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamNoticeBoards(TeamNoticeBoard teamNoticeBoard)
        {
            base.AddObject("TeamNoticeBoards", teamNoticeBoard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Team team)
        {
            base.AddObject("Teams", team);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamScheduleDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamScheduleDetails(TeamScheduleDetail teamScheduleDetail)
        {
            base.AddObject("TeamScheduleDetails", teamScheduleDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamSchedules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamSchedules(TeamSchedule teamSchedule)
        {
            base.AddObject("TeamSchedules", teamSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserFavoriteSports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserFavoriteSports(UserFavoriteSport userFavoriteSport)
        {
            base.AddObject("UserFavoriteSports", userFavoriteSport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserMetrics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserMetrics(UserMetric userMetric)
        {
            base.AddObject("UserMetrics", userMetric);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserSchools EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserSchools(UserSchool userSchool)
        {
            base.AddObject("UserSchools", userSchool);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserSocialLinks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserSocialLinks(UserSocialLink userSocialLink)
        {
            base.AddObject("UserSocialLinks", userSocialLink);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserSportTags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserSportTags(UserSportTag userSportTag)
        {
            base.AddObject("UserSportTags", userSportTag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Awards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAwards(Award award)
        {
            base.AddObject("Awards", award);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Invitations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvitations(Invitation invitation)
        {
            base.AddObject("Invitations", invitation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentTitles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentTitles(DocumentTitle documentTitle)
        {
            base.AddObject("DocumentTitles", documentTitle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocFiles(DocFile docFile)
        {
            base.AddObject("DocFiles", docFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Videos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVideos(Video video)
        {
            base.AddObject("Videos", video);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Carriers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarriers(Carrier carrier)
        {
            base.AddObject("Carriers", carrier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InviteEmailaddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInviteEmailaddresses(InviteEmailaddress inviteEmailaddress)
        {
            base.AddObject("InviteEmailaddresses", inviteEmailaddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Calendars EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalendars(Calendar calendar)
        {
            base.AddObject("Calendars", calendar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CalendarAttendees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalendarAttendees(CalendarAttendee calendarAttendee)
        {
            base.AddObject("CalendarAttendees", calendarAttendee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Results EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResults(Result result)
        {
            base.AddObject("Results", result);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamAdmins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamAdmins(TeamAdmin teamAdmin)
        {
            base.AddObject("TeamAdmins", teamAdmin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Feeds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeeds(Feed feed)
        {
            base.AddObject("Feeds", feed);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedContents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedContents(FeedContent feedContent)
        {
            base.AddObject("FeedContents", feedContent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PollOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPollOptions(PollOption pollOption)
        {
            base.AddObject("PollOptions", pollOption);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Polls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolls(Poll poll)
        {
            base.AddObject("Polls", poll);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Votes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVotes(Vote vote)
        {
            base.AddObject("Votes", vote);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Activity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Activity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Activity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="postDate">Initial value of the PostDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isPublic">Initial value of the IsPublic property.</param>
        /// <param name="ownerId">Initial value of the OwnerId property.</param>
        public static Activity CreateActivity(global::System.Int64 id, global::System.String description, global::System.DateTime postDate, global::System.Boolean isActive, global::System.Boolean isPublic, global::System.Decimal ownerId)
        {
            Activity activity = new Activity();
            activity.Id = id;
            activity.Description = description;
            activity.PostDate = postDate;
            activity.IsActive = isActive;
            activity.IsPublic = isPublic;
            activity.OwnerId = ownerId;
            return activity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PostDate
        {
            get
            {
                return _PostDate;
            }
            set
            {
                OnPostDateChanging(value);
                ReportPropertyChanging("PostDate");
                _PostDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostDate");
                OnPostDateChanged();
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnPostDateChanging(global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPublic
        {
            get
            {
                return _IsPublic;
            }
            set
            {
                OnIsPublicChanging(value);
                ReportPropertyChanging("IsPublic");
                _IsPublic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPublic");
                OnIsPublicChanged();
            }
        }
        private global::System.Boolean _IsPublic;
        partial void OnIsPublicChanging(global::System.Boolean value);
        partial void OnIsPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private global::System.Decimal _OwnerId;
        partial void OnOwnerIdChanging(global::System.Decimal value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PhotoId
        {
            get
            {
                return _PhotoId;
            }
            set
            {
                OnPhotoIdChanging(value);
                ReportPropertyChanging("PhotoId");
                _PhotoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoId");
                OnPhotoIdChanged();
            }
        }
        private Nullable<global::System.Int64> _PhotoId;
        partial void OnPhotoIdChanging(Nullable<global::System.Int64> value);
        partial void OnPhotoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> VideoId
        {
            get
            {
                return _VideoId;
            }
            set
            {
                OnVideoIdChanging(value);
                ReportPropertyChanging("VideoId");
                _VideoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VideoId");
                OnVideoIdChanged();
            }
        }
        private Nullable<global::System.Int64> _VideoId;
        partial void OnVideoIdChanging(Nullable<global::System.Int64> value);
        partial void OnVideoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ParentActivityId
        {
            get
            {
                return _ParentActivityId;
            }
            set
            {
                OnParentActivityIdChanging(value);
                ReportPropertyChanging("ParentActivityId");
                _ParentActivityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentActivityId");
                OnParentActivityIdChanged();
            }
        }
        private Nullable<global::System.Int64> _ParentActivityId;
        partial void OnParentActivityIdChanging(Nullable<global::System.Int64> value);
        partial void OnParentActivityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AlbumPhotoId
        {
            get
            {
                return _AlbumPhotoId;
            }
            set
            {
                OnAlbumPhotoIdChanging(value);
                ReportPropertyChanging("AlbumPhotoId");
                _AlbumPhotoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlbumPhotoId");
                OnAlbumPhotoIdChanged();
            }
        }
        private Nullable<global::System.Int64> _AlbumPhotoId;
        partial void OnAlbumPhotoIdChanging(Nullable<global::System.Int64> value);
        partial void OnAlbumPhotoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DocumentId
        {
            get
            {
                return _DocumentId;
            }
            set
            {
                OnDocumentIdChanging(value);
                ReportPropertyChanging("DocumentId");
                _DocumentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentId");
                OnDocumentIdChanged();
            }
        }
        private Nullable<global::System.Int64> _DocumentId;
        partial void OnDocumentIdChanging(Nullable<global::System.Int64> value);
        partial void OnDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private Nullable<global::System.Int64> _EventId;
        partial void OnEventIdChanging(Nullable<global::System.Int64> value);
        partial void OnEventIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Activities_Activities", "Activities1")]
        public EntityCollection<Activity> Activities1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("Sportzly.Model.FK_Activities_Activities", "Activities1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("Sportzly.Model.FK_Activities_Activities", "Activities1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Activities_Activities", "Activities")]
        public Activity Activity1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("Sportzly.Model.FK_Activities_Activities", "Activities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("Sportzly.Model.FK_Activities_Activities", "Activities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Activity> Activity1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("Sportzly.Model.FK_Activities_Activities", "Activities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Activity>("Sportzly.Model.FK_Activities_Activities", "Activities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Activities_AlbumPhotos", "AlbumPhotos")]
        public AlbumPhoto AlbumPhoto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlbumPhoto>("Sportzly.Model.FK_Activities_AlbumPhotos", "AlbumPhotos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlbumPhoto>("Sportzly.Model.FK_Activities_AlbumPhotos", "AlbumPhotos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AlbumPhoto> AlbumPhotoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlbumPhoto>("Sportzly.Model.FK_Activities_AlbumPhotos", "AlbumPhotos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AlbumPhoto>("Sportzly.Model.FK_Activities_AlbumPhotos", "AlbumPhotos", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_ActivityGroup_Activities", "ActivityGroup")]
        public EntityCollection<ActivityGroup> ActivityGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActivityGroup>("Sportzly.Model.FK_ActivityGroup_Activities", "ActivityGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActivityGroup>("Sportzly.Model.FK_ActivityGroup_Activities", "ActivityGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_ActivityPersonal_Activities", "ActivityPersonal")]
        public EntityCollection<ActivityPersonal> ActivityPersonals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActivityPersonal>("Sportzly.Model.FK_ActivityPersonal_Activities", "ActivityPersonal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActivityPersonal>("Sportzly.Model.FK_ActivityPersonal_Activities", "ActivityPersonal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_ActivityTeam_Activities", "ActivityTeam")]
        public EntityCollection<ActivityTeam> ActivityTeams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActivityTeam>("Sportzly.Model.FK_ActivityTeam_Activities", "ActivityTeam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActivityTeam>("Sportzly.Model.FK_ActivityTeam_Activities", "ActivityTeam", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbActivities_tbUsers", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbActivities_tbUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbActivities_tbUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbActivities_tbUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_tbActivities_tbUsers", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbActivityLikes_tbActivities", "ActivityCheers")]
        public EntityCollection<ActivityCheer> ActivityCheers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActivityCheer>("Sportzly.Model.FK_tbActivityLikes_tbActivities", "ActivityCheers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActivityCheer>("Sportzly.Model.FK_tbActivityLikes_tbActivities", "ActivityCheers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Activities_Albums", "Album")]
        public Album Album
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("Sportzly.Model.FK_Activities_Albums", "Album").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("Sportzly.Model.FK_Activities_Albums", "Album").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Album> AlbumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("Sportzly.Model.FK_Activities_Albums", "Album");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Album>("Sportzly.Model.FK_Activities_Albums", "Album", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Activities_AlbumPhotos1", "AlbumPhoto")]
        public AlbumPhoto AlbumPhoto1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlbumPhoto>("Sportzly.Model.FK_Activities_AlbumPhotos1", "AlbumPhoto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlbumPhoto>("Sportzly.Model.FK_Activities_AlbumPhotos1", "AlbumPhoto").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AlbumPhoto> AlbumPhoto1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlbumPhoto>("Sportzly.Model.FK_Activities_AlbumPhotos1", "AlbumPhoto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AlbumPhoto>("Sportzly.Model.FK_Activities_AlbumPhotos1", "AlbumPhoto", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Activities_DocumentTitle", "DocumentTitle")]
        public DocumentTitle DocumentTitle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentTitle>("Sportzly.Model.FK_Activities_DocumentTitle", "DocumentTitle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentTitle>("Sportzly.Model.FK_Activities_DocumentTitle", "DocumentTitle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentTitle> DocumentTitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentTitle>("Sportzly.Model.FK_Activities_DocumentTitle", "DocumentTitle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentTitle>("Sportzly.Model.FK_Activities_DocumentTitle", "DocumentTitle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Activities_Videos", "Video")]
        public Video Video
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Video>("Sportzly.Model.FK_Activities_Videos", "Video").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Video>("Sportzly.Model.FK_Activities_Videos", "Video").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Video> VideoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Video>("Sportzly.Model.FK_Activities_Videos", "Video");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Video>("Sportzly.Model.FK_Activities_Videos", "Video", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="ActivityCheer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActivityCheer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActivityCheer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="activityId">Initial value of the ActivityId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="clickDate">Initial value of the ClickDate property.</param>
        /// <param name="isCheered">Initial value of the IsCheered property.</param>
        public static ActivityCheer CreateActivityCheer(global::System.Int64 id, global::System.Int64 activityId, global::System.Decimal userId, global::System.DateTime clickDate, global::System.Boolean isCheered)
        {
            ActivityCheer activityCheer = new ActivityCheer();
            activityCheer.Id = id;
            activityCheer.ActivityId = activityId;
            activityCheer.UserId = userId;
            activityCheer.ClickDate = clickDate;
            activityCheer.IsCheered = isCheered;
            return activityCheer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ActivityId
        {
            get
            {
                return _ActivityId;
            }
            set
            {
                OnActivityIdChanging(value);
                ReportPropertyChanging("ActivityId");
                _ActivityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivityId");
                OnActivityIdChanged();
            }
        }
        private global::System.Int64 _ActivityId;
        partial void OnActivityIdChanging(global::System.Int64 value);
        partial void OnActivityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Decimal _UserId;
        partial void OnUserIdChanging(global::System.Decimal value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ClickDate
        {
            get
            {
                return _ClickDate;
            }
            set
            {
                OnClickDateChanging(value);
                ReportPropertyChanging("ClickDate");
                _ClickDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClickDate");
                OnClickDateChanged();
            }
        }
        private global::System.DateTime _ClickDate;
        partial void OnClickDateChanging(global::System.DateTime value);
        partial void OnClickDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCheered
        {
            get
            {
                return _IsCheered;
            }
            set
            {
                OnIsCheeredChanging(value);
                ReportPropertyChanging("IsCheered");
                _IsCheered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCheered");
                OnIsCheeredChanged();
            }
        }
        private global::System.Boolean _IsCheered;
        partial void OnIsCheeredChanging(global::System.Boolean value);
        partial void OnIsCheeredChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbActivityLikes_tbActivities", "Activities")]
        public Activity Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("Sportzly.Model.FK_tbActivityLikes_tbActivities", "Activities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("Sportzly.Model.FK_tbActivityLikes_tbActivities", "Activities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Activity> ActivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("Sportzly.Model.FK_tbActivityLikes_tbActivities", "Activities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Activity>("Sportzly.Model.FK_tbActivityLikes_tbActivities", "Activities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbActivityLikes_tbUsers", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbActivityLikes_tbUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbActivityLikes_tbUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbActivityLikes_tbUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_tbActivityLikes_tbUsers", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="ActivityGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActivityGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActivityGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="activityId">Initial value of the ActivityId property.</param>
        public static ActivityGroup CreateActivityGroup(global::System.Int64 id, global::System.Decimal groupId, global::System.Int64 activityId)
        {
            ActivityGroup activityGroup = new ActivityGroup();
            activityGroup.Id = id;
            activityGroup.GroupId = groupId;
            activityGroup.ActivityId = activityId;
            return activityGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Decimal _GroupId;
        partial void OnGroupIdChanging(global::System.Decimal value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ActivityId
        {
            get
            {
                return _ActivityId;
            }
            set
            {
                OnActivityIdChanging(value);
                ReportPropertyChanging("ActivityId");
                _ActivityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivityId");
                OnActivityIdChanged();
            }
        }
        private global::System.Int64 _ActivityId;
        partial void OnActivityIdChanging(global::System.Int64 value);
        partial void OnActivityIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_ActivityGroup_Activities", "Activities")]
        public Activity Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("Sportzly.Model.FK_ActivityGroup_Activities", "Activities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("Sportzly.Model.FK_ActivityGroup_Activities", "Activities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Activity> ActivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("Sportzly.Model.FK_ActivityGroup_Activities", "Activities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Activity>("Sportzly.Model.FK_ActivityGroup_Activities", "Activities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbActivityGroup_tbGroups", "Groups")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Sportzly.Model.FK_tbActivityGroup_tbGroups", "Groups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Sportzly.Model.FK_tbActivityGroup_tbGroups", "Groups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Sportzly.Model.FK_tbActivityGroup_tbGroups", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("Sportzly.Model.FK_tbActivityGroup_tbGroups", "Groups", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="ActivityPersonal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActivityPersonal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActivityPersonal object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="activityId">Initial value of the ActivityId property.</param>
        public static ActivityPersonal CreateActivityPersonal(global::System.Int64 id, global::System.Decimal userId, global::System.Int64 activityId)
        {
            ActivityPersonal activityPersonal = new ActivityPersonal();
            activityPersonal.Id = id;
            activityPersonal.UserId = userId;
            activityPersonal.ActivityId = activityId;
            return activityPersonal;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Decimal _UserId;
        partial void OnUserIdChanging(global::System.Decimal value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ActivityId
        {
            get
            {
                return _ActivityId;
            }
            set
            {
                OnActivityIdChanging(value);
                ReportPropertyChanging("ActivityId");
                _ActivityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivityId");
                OnActivityIdChanged();
            }
        }
        private global::System.Int64 _ActivityId;
        partial void OnActivityIdChanging(global::System.Int64 value);
        partial void OnActivityIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_ActivityPersonal_Activities", "Activities")]
        public Activity Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("Sportzly.Model.FK_ActivityPersonal_Activities", "Activities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("Sportzly.Model.FK_ActivityPersonal_Activities", "Activities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Activity> ActivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("Sportzly.Model.FK_ActivityPersonal_Activities", "Activities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Activity>("Sportzly.Model.FK_ActivityPersonal_Activities", "Activities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_ActivityPersonal_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_ActivityPersonal_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_ActivityPersonal_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_ActivityPersonal_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_ActivityPersonal_Users", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="ActivityTeam")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActivityTeam : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActivityTeam object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="teamId">Initial value of the TeamId property.</param>
        /// <param name="activityId">Initial value of the ActivityId property.</param>
        public static ActivityTeam CreateActivityTeam(global::System.Int64 id, global::System.Int64 teamId, global::System.Int64 activityId)
        {
            ActivityTeam activityTeam = new ActivityTeam();
            activityTeam.Id = id;
            activityTeam.TeamId = teamId;
            activityTeam.ActivityId = activityId;
            return activityTeam;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private global::System.Int64 _TeamId;
        partial void OnTeamIdChanging(global::System.Int64 value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ActivityId
        {
            get
            {
                return _ActivityId;
            }
            set
            {
                OnActivityIdChanging(value);
                ReportPropertyChanging("ActivityId");
                _ActivityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivityId");
                OnActivityIdChanged();
            }
        }
        private global::System.Int64 _ActivityId;
        partial void OnActivityIdChanging(global::System.Int64 value);
        partial void OnActivityIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_ActivityTeam_Activities", "Activities")]
        public Activity Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("Sportzly.Model.FK_ActivityTeam_Activities", "Activities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("Sportzly.Model.FK_ActivityTeam_Activities", "Activities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Activity> ActivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("Sportzly.Model.FK_ActivityTeam_Activities", "Activities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Activity>("Sportzly.Model.FK_ActivityTeam_Activities", "Activities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_ActivityTeam_Teams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_ActivityTeam_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_ActivityTeam_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_ActivityTeam_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("Sportzly.Model.FK_ActivityTeam_Teams", "Teams", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="localityId">Initial value of the LocalityId property.</param>
        public static Address CreateAddress(global::System.Int64 id, global::System.Int32 localityId)
        {
            Address address = new Address();
            address.Id = id;
            address.LocalityId = localityId;
            return address;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StreetAddress
        {
            get
            {
                return _StreetAddress;
            }
            set
            {
                OnStreetAddressChanging(value);
                ReportPropertyChanging("StreetAddress");
                _StreetAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StreetAddress");
                OnStreetAddressChanged();
            }
        }
        private global::System.String _StreetAddress;
        partial void OnStreetAddressChanging(global::System.String value);
        partial void OnStreetAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocalityId
        {
            get
            {
                return _LocalityId;
            }
            set
            {
                OnLocalityIdChanging(value);
                ReportPropertyChanging("LocalityId");
                _LocalityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocalityId");
                OnLocalityIdChanged();
            }
        }
        private global::System.Int32 _LocalityId;
        partial void OnLocalityIdChanging(global::System.Int32 value);
        partial void OnLocalityIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Address_Locality", "Locality")]
        public Locality Locality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Locality>("Sportzly.Model.FK_Address_Locality", "Locality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Locality>("Sportzly.Model.FK_Address_Locality", "Locality").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Locality> LocalityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Locality>("Sportzly.Model.FK_Address_Locality", "Locality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Locality>("Sportzly.Model.FK_Address_Locality", "Locality", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Schools_Address", "Schools")]
        public EntityCollection<School> Schools
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<School>("Sportzly.Model.FK_Schools_Address", "Schools");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<School>("Sportzly.Model.FK_Schools_Address", "Schools", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Users_Address", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Sportzly.Model.FK_Users_Address", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Sportzly.Model.FK_Users_Address", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Album")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Album : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Album object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="ownerId">Initial value of the OwnerId property.</param>
        /// <param name="albumName">Initial value of the AlbumName property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="isPublic">Initial value of the IsPublic property.</param>
        public static Album CreateAlbum(global::System.Int64 id, global::System.Decimal ownerId, global::System.String albumName, global::System.DateTime createDate, global::System.Boolean isPublic)
        {
            Album album = new Album();
            album.Id = id;
            album.OwnerId = ownerId;
            album.AlbumName = albumName;
            album.CreateDate = createDate;
            album.IsPublic = isPublic;
            return album;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private global::System.Decimal _OwnerId;
        partial void OnOwnerIdChanging(global::System.Decimal value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AlbumName
        {
            get
            {
                return _AlbumName;
            }
            set
            {
                OnAlbumNameChanging(value);
                ReportPropertyChanging("AlbumName");
                _AlbumName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AlbumName");
                OnAlbumNameChanged();
            }
        }
        private global::System.String _AlbumName;
        partial void OnAlbumNameChanging(global::System.String value);
        partial void OnAlbumNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPublic
        {
            get
            {
                return _IsPublic;
            }
            set
            {
                OnIsPublicChanging(value);
                ReportPropertyChanging("IsPublic");
                _IsPublic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPublic");
                OnIsPublicChanged();
            }
        }
        private global::System.Boolean _IsPublic;
        partial void OnIsPublicChanging(global::System.Boolean value);
        partial void OnIsPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PicasaAlbumId
        {
            get
            {
                return _PicasaAlbumId;
            }
            set
            {
                OnPicasaAlbumIdChanging(value);
                ReportPropertyChanging("PicasaAlbumId");
                _PicasaAlbumId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PicasaAlbumId");
                OnPicasaAlbumIdChanged();
            }
        }
        private global::System.String _PicasaAlbumId;
        partial void OnPicasaAlbumIdChanging(global::System.String value);
        partial void OnPicasaAlbumIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbAlbumContents_tbAlbums", "AlbumPhotos")]
        public EntityCollection<AlbumPhoto> AlbumPhotos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AlbumPhoto>("Sportzly.Model.FK_tbAlbumContents_tbAlbums", "AlbumPhotos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AlbumPhoto>("Sportzly.Model.FK_tbAlbumContents_tbAlbums", "AlbumPhotos", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Activities_Albums", "Activity")]
        public EntityCollection<Activity> Activities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("Sportzly.Model.FK_Activities_Albums", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("Sportzly.Model.FK_Activities_Albums", "Activity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="AlbumPhoto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AlbumPhoto : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AlbumPhoto object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="ownerId">Initial value of the OwnerId property.</param>
        /// <param name="postDate">Initial value of the PostDate property.</param>
        /// <param name="isCoverPage">Initial value of the IsCoverPage property.</param>
        public static AlbumPhoto CreateAlbumPhoto(global::System.Int64 id, global::System.Decimal ownerId, global::System.DateTime postDate, global::System.Boolean isCoverPage)
        {
            AlbumPhoto albumPhoto = new AlbumPhoto();
            albumPhoto.Id = id;
            albumPhoto.OwnerId = ownerId;
            albumPhoto.PostDate = postDate;
            albumPhoto.IsCoverPage = isCoverPage;
            return albumPhoto;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AlbumId
        {
            get
            {
                return _AlbumId;
            }
            set
            {
                OnAlbumIdChanging(value);
                ReportPropertyChanging("AlbumId");
                _AlbumId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlbumId");
                OnAlbumIdChanged();
            }
        }
        private Nullable<global::System.Int64> _AlbumId;
        partial void OnAlbumIdChanging(Nullable<global::System.Int64> value);
        partial void OnAlbumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private global::System.Decimal _OwnerId;
        partial void OnOwnerIdChanging(global::System.Decimal value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PicasaPhotoId
        {
            get
            {
                return _PicasaPhotoId;
            }
            set
            {
                OnPicasaPhotoIdChanging(value);
                ReportPropertyChanging("PicasaPhotoId");
                _PicasaPhotoId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PicasaPhotoId");
                OnPicasaPhotoIdChanged();
            }
        }
        private global::System.String _PicasaPhotoId;
        partial void OnPicasaPhotoIdChanging(global::System.String value);
        partial void OnPicasaPhotoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UrlPath
        {
            get
            {
                return _UrlPath;
            }
            set
            {
                OnUrlPathChanging(value);
                ReportPropertyChanging("UrlPath");
                _UrlPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UrlPath");
                OnUrlPathChanged();
            }
        }
        private global::System.String _UrlPath;
        partial void OnUrlPathChanging(global::System.String value);
        partial void OnUrlPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PostDate
        {
            get
            {
                return _PostDate;
            }
            set
            {
                OnPostDateChanging(value);
                ReportPropertyChanging("PostDate");
                _PostDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostDate");
                OnPostDateChanged();
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnPostDateChanging(global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CheerCount
        {
            get
            {
                return _CheerCount;
            }
            set
            {
                OnCheerCountChanging(value);
                ReportPropertyChanging("CheerCount");
                _CheerCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheerCount");
                OnCheerCountChanged();
            }
        }
        private Nullable<global::System.Int32> _CheerCount;
        partial void OnCheerCountChanging(Nullable<global::System.Int32> value);
        partial void OnCheerCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JeerCount
        {
            get
            {
                return _JeerCount;
            }
            set
            {
                OnJeerCountChanging(value);
                ReportPropertyChanging("JeerCount");
                _JeerCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JeerCount");
                OnJeerCountChanged();
            }
        }
        private Nullable<global::System.Int32> _JeerCount;
        partial void OnJeerCountChanging(Nullable<global::System.Int32> value);
        partial void OnJeerCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCoverPage
        {
            get
            {
                return _IsCoverPage;
            }
            set
            {
                OnIsCoverPageChanging(value);
                ReportPropertyChanging("IsCoverPage");
                _IsCoverPage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCoverPage");
                OnIsCoverPageChanged();
            }
        }
        private global::System.Boolean _IsCoverPage;
        partial void OnIsCoverPageChanging(global::System.Boolean value);
        partial void OnIsCoverPageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private Nullable<global::System.Int64> _TeamId;
        partial void OnTeamIdChanging(Nullable<global::System.Int64> value);
        partial void OnTeamIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Activities_AlbumPhotos", "Activities")]
        public EntityCollection<Activity> Activities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("Sportzly.Model.FK_Activities_AlbumPhotos", "Activities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("Sportzly.Model.FK_Activities_AlbumPhotos", "Activities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbAlbumContents_tbAlbums", "Albums")]
        public Album Album
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("Sportzly.Model.FK_tbAlbumContents_tbAlbums", "Albums").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("Sportzly.Model.FK_tbAlbumContents_tbAlbums", "Albums").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Album> AlbumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("Sportzly.Model.FK_tbAlbumContents_tbAlbums", "Albums");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Album>("Sportzly.Model.FK_tbAlbumContents_tbAlbums", "Albums", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbAlbumContents_tbUsers", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbAlbumContents_tbUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbAlbumContents_tbUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbAlbumContents_tbUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_tbAlbumContents_tbUsers", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Activities_AlbumPhotos1", "Activity")]
        public EntityCollection<Activity> Activities1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("Sportzly.Model.FK_Activities_AlbumPhotos1", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("Sportzly.Model.FK_Activities_AlbumPhotos1", "Activity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Award")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Award : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Award object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="awardDetails">Initial value of the AwardDetails property.</param>
        /// <param name="userId">Initial value of the userId property.</param>
        public static Award CreateAward(global::System.Int64 id, global::System.String awardDetails, global::System.Decimal userId)
        {
            Award award = new Award();
            award.id = id;
            award.AwardDetails = awardDetails;
            award.userId = userId;
            return award;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AwardDetails
        {
            get
            {
                return _AwardDetails;
            }
            set
            {
                OnAwardDetailsChanging(value);
                ReportPropertyChanging("AwardDetails");
                _AwardDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AwardDetails");
                OnAwardDetailsChanged();
            }
        }
        private global::System.String _AwardDetails;
        partial void OnAwardDetailsChanging(global::System.String value);
        partial void OnAwardDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal userId
        {
            get
            {
                return _userId;
            }
            set
            {
                OnuserIdChanging(value);
                ReportPropertyChanging("userId");
                _userId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userId");
                OnuserIdChanged();
            }
        }
        private global::System.Decimal _userId;
        partial void OnuserIdChanging(global::System.Decimal value);
        partial void OnuserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Awards_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Awards_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Awards_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Awards_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_Awards_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Calendar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Calendar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Calendar object.
        /// </summary>
        /// <param name="calendarId">Initial value of the calendarId property.</param>
        /// <param name="isAllDayEvent">Initial value of the IsAllDayEvent property.</param>
        /// <param name="color">Initial value of the Color property.</param>
        /// <param name="isRecurring">Initial value of the IsRecurring property.</param>
        /// <param name="isEditable">Initial value of the IsEditable property.</param>
        /// <param name="calendarType">Initial value of the CalendarType property.</param>
        /// <param name="teamId">Initial value of the TeamId property.</param>
        /// <param name="userId">Initial value of the userId property.</param>
        public static Calendar CreateCalendar(global::System.Int64 calendarId, global::System.Byte isAllDayEvent, global::System.Byte color, global::System.Byte isRecurring, global::System.Byte isEditable, global::System.String calendarType, global::System.Int64 teamId, global::System.Decimal userId)
        {
            Calendar calendar = new Calendar();
            calendar.calendarId = calendarId;
            calendar.IsAllDayEvent = isAllDayEvent;
            calendar.Color = color;
            calendar.IsRecurring = isRecurring;
            calendar.IsEditable = isEditable;
            calendar.CalendarType = calendarType;
            calendar.TeamId = teamId;
            calendar.userId = userId;
            return calendar;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 calendarId
        {
            get
            {
                return _calendarId;
            }
            set
            {
                if (_calendarId != value)
                {
                    OncalendarIdChanging(value);
                    ReportPropertyChanging("calendarId");
                    _calendarId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("calendarId");
                    OncalendarIdChanged();
                }
            }
        }
        private global::System.Int64 _calendarId;
        partial void OncalendarIdChanging(global::System.Int64 value);
        partial void OncalendarIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte IsAllDayEvent
        {
            get
            {
                return _IsAllDayEvent;
            }
            set
            {
                OnIsAllDayEventChanging(value);
                ReportPropertyChanging("IsAllDayEvent");
                _IsAllDayEvent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAllDayEvent");
                OnIsAllDayEventChanged();
            }
        }
        private global::System.Byte _IsAllDayEvent;
        partial void OnIsAllDayEventChanging(global::System.Byte value);
        partial void OnIsAllDayEventChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.Byte _Color;
        partial void OnColorChanging(global::System.Byte value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte IsRecurring
        {
            get
            {
                return _IsRecurring;
            }
            set
            {
                OnIsRecurringChanging(value);
                ReportPropertyChanging("IsRecurring");
                _IsRecurring = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRecurring");
                OnIsRecurringChanged();
            }
        }
        private global::System.Byte _IsRecurring;
        partial void OnIsRecurringChanging(global::System.Byte value);
        partial void OnIsRecurringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte IsEditable
        {
            get
            {
                return _IsEditable;
            }
            set
            {
                OnIsEditableChanging(value);
                ReportPropertyChanging("IsEditable");
                _IsEditable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEditable");
                OnIsEditableChanged();
            }
        }
        private global::System.Byte _IsEditable;
        partial void OnIsEditableChanging(global::System.Byte value);
        partial void OnIsEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CalendarType
        {
            get
            {
                return _CalendarType;
            }
            set
            {
                OnCalendarTypeChanging(value);
                ReportPropertyChanging("CalendarType");
                _CalendarType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CalendarType");
                OnCalendarTypeChanged();
            }
        }
        private global::System.String _CalendarType;
        partial void OnCalendarTypeChanging(global::System.String value);
        partial void OnCalendarTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private global::System.Int64 _TeamId;
        partial void OnTeamIdChanging(global::System.Int64 value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Season
        {
            get
            {
                return _Season;
            }
            set
            {
                OnSeasonChanging(value);
                ReportPropertyChanging("Season");
                _Season = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Season");
                OnSeasonChanged();
            }
        }
        private global::System.String _Season;
        partial void OnSeasonChanging(global::System.String value);
        partial void OnSeasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine
        {
            get
            {
                return _AddressLine;
            }
            set
            {
                OnAddressLineChanging(value);
                ReportPropertyChanging("AddressLine");
                _AddressLine = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine");
                OnAddressLineChanged();
            }
        }
        private global::System.String _AddressLine;
        partial void OnAddressLineChanging(global::System.String value);
        partial void OnAddressLineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal userId
        {
            get
            {
                return _userId;
            }
            set
            {
                OnuserIdChanging(value);
                ReportPropertyChanging("userId");
                _userId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userId");
                OnuserIdChanged();
            }
        }
        private global::System.Decimal _userId;
        partial void OnuserIdChanging(global::System.Decimal value);
        partial void OnuserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> parentId
        {
            get
            {
                return _parentId;
            }
            set
            {
                OnparentIdChanging(value);
                ReportPropertyChanging("parentId");
                _parentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("parentId");
                OnparentIdChanged();
            }
        }
        private Nullable<global::System.Int64> _parentId;
        partial void OnparentIdChanging(Nullable<global::System.Int64> value);
        partial void OnparentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> opponentTeamId
        {
            get
            {
                return _opponentTeamId;
            }
            set
            {
                OnopponentTeamIdChanging(value);
                ReportPropertyChanging("opponentTeamId");
                _opponentTeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("opponentTeamId");
                OnopponentTeamIdChanged();
            }
        }
        private Nullable<global::System.Int64> _opponentTeamId;
        partial void OnopponentTeamIdChanging(Nullable<global::System.Int64> value);
        partial void OnopponentTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HomeGame
        {
            get
            {
                return _HomeGame;
            }
            set
            {
                OnHomeGameChanging(value);
                ReportPropertyChanging("HomeGame");
                _HomeGame = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HomeGame");
                OnHomeGameChanged();
            }
        }
        private global::System.String _HomeGame;
        partial void OnHomeGameChanging(global::System.String value);
        partial void OnHomeGameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OppName
        {
            get
            {
                return _OppName;
            }
            set
            {
                OnOppNameChanging(value);
                ReportPropertyChanging("OppName");
                _OppName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OppName");
                OnOppNameChanged();
            }
        }
        private global::System.String _OppName;
        partial void OnOppNameChanging(global::System.String value);
        partial void OnOppNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTeam
        {
            get
            {
                return _IsTeam;
            }
            set
            {
                OnIsTeamChanging(value);
                ReportPropertyChanging("IsTeam");
                _IsTeam = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTeam");
                OnIsTeamChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTeam;
        partial void OnIsTeamChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TimeZone
        {
            get
            {
                return _TimeZone;
            }
            set
            {
                OnTimeZoneChanging(value);
                ReportPropertyChanging("TimeZone");
                _TimeZone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeZone");
                OnTimeZoneChanged();
            }
        }
        private global::System.String _TimeZone;
        partial void OnTimeZoneChanging(global::System.String value);
        partial void OnTimeZoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDelete
        {
            get
            {
                return _IsDelete;
            }
            set
            {
                OnIsDeleteChanging(value);
                ReportPropertyChanging("IsDelete");
                _IsDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDelete");
                OnIsDeleteChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDelete;
        partial void OnIsDeleteChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeleteChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Calendar_Calendar", "Calendar1")]
        public EntityCollection<Calendar> Calendar1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Calendar>("Sportzly.Model.FK_Calendar_Calendar", "Calendar1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Calendar>("Sportzly.Model.FK_Calendar_Calendar", "Calendar1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Calendar_Calendar", "Calendar")]
        public Calendar Calendar2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calendar>("Sportzly.Model.FK_Calendar_Calendar", "Calendar").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calendar>("Sportzly.Model.FK_Calendar_Calendar", "Calendar").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Calendar> Calendar2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calendar>("Sportzly.Model.FK_Calendar_Calendar", "Calendar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Calendar>("Sportzly.Model.FK_Calendar_Calendar", "Calendar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Calendar_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Calendar_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Calendar_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Calendar_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_Calendar_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_CalendarAttendees_Calendar", "CalendarAttendee")]
        public EntityCollection<CalendarAttendee> CalendarAttendees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CalendarAttendee>("Sportzly.Model.FK_CalendarAttendees_Calendar", "CalendarAttendee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CalendarAttendee>("Sportzly.Model.FK_CalendarAttendees_Calendar", "CalendarAttendee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Result_Calendar", "Result")]
        public EntityCollection<Result> Results
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Result>("Sportzly.Model.FK_Result_Calendar", "Result");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Result>("Sportzly.Model.FK_Result_Calendar", "Result", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="CalendarAttendee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CalendarAttendee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CalendarAttendee object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="calendarId">Initial value of the calendarId property.</param>
        /// <param name="attendeesEmail">Initial value of the attendeesEmail property.</param>
        public static CalendarAttendee CreateCalendarAttendee(global::System.Int64 id, global::System.Int64 calendarId, global::System.String attendeesEmail)
        {
            CalendarAttendee calendarAttendee = new CalendarAttendee();
            calendarAttendee.Id = id;
            calendarAttendee.calendarId = calendarId;
            calendarAttendee.attendeesEmail = attendeesEmail;
            return calendarAttendee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 calendarId
        {
            get
            {
                return _calendarId;
            }
            set
            {
                OncalendarIdChanging(value);
                ReportPropertyChanging("calendarId");
                _calendarId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("calendarId");
                OncalendarIdChanged();
            }
        }
        private global::System.Int64 _calendarId;
        partial void OncalendarIdChanging(global::System.Int64 value);
        partial void OncalendarIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String attendeesEmail
        {
            get
            {
                return _attendeesEmail;
            }
            set
            {
                OnattendeesEmailChanging(value);
                ReportPropertyChanging("attendeesEmail");
                _attendeesEmail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("attendeesEmail");
                OnattendeesEmailChanged();
            }
        }
        private global::System.String _attendeesEmail;
        partial void OnattendeesEmailChanging(global::System.String value);
        partial void OnattendeesEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String response
        {
            get
            {
                return _response;
            }
            set
            {
                OnresponseChanging(value);
                ReportPropertyChanging("response");
                _response = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("response");
                OnresponseChanged();
            }
        }
        private global::System.String _response;
        partial void OnresponseChanging(global::System.String value);
        partial void OnresponseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> lastUpdated
        {
            get
            {
                return _lastUpdated;
            }
            set
            {
                OnlastUpdatedChanging(value);
                ReportPropertyChanging("lastUpdated");
                _lastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lastUpdated");
                OnlastUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _lastUpdated;
        partial void OnlastUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnlastUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_CalendarAttendees_Calendar", "Calendar")]
        public Calendar Calendar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calendar>("Sportzly.Model.FK_CalendarAttendees_Calendar", "Calendar").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calendar>("Sportzly.Model.FK_CalendarAttendees_Calendar", "Calendar").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Calendar> CalendarReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calendar>("Sportzly.Model.FK_CalendarAttendees_Calendar", "Calendar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Calendar>("Sportzly.Model.FK_CalendarAttendees_Calendar", "Calendar", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Carrier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carrier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Carrier object.
        /// </summary>
        /// <param name="carrier_id_pk">Initial value of the Carrier_id_pk property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Carrier CreateCarrier(global::System.Int32 carrier_id_pk, global::System.Boolean isActive)
        {
            Carrier carrier = new Carrier();
            carrier.Carrier_id_pk = carrier_id_pk;
            carrier.IsActive = isActive;
            return carrier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Carrier_id_pk
        {
            get
            {
                return _Carrier_id_pk;
            }
            set
            {
                if (_Carrier_id_pk != value)
                {
                    OnCarrier_id_pkChanging(value);
                    ReportPropertyChanging("Carrier_id_pk");
                    _Carrier_id_pk = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Carrier_id_pk");
                    OnCarrier_id_pkChanged();
                }
            }
        }
        private global::System.Int32 _Carrier_id_pk;
        partial void OnCarrier_id_pkChanging(global::System.Int32 value);
        partial void OnCarrier_id_pkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Carrier_Name
        {
            get
            {
                return _Carrier_Name;
            }
            set
            {
                OnCarrier_NameChanging(value);
                ReportPropertyChanging("Carrier_Name");
                _Carrier_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Carrier_Name");
                OnCarrier_NameChanged();
            }
        }
        private global::System.String _Carrier_Name;
        partial void OnCarrier_NameChanging(global::System.String value);
        partial void OnCarrier_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Carrier_Value
        {
            get
            {
                return _Carrier_Value;
            }
            set
            {
                OnCarrier_ValueChanging(value);
                ReportPropertyChanging("Carrier_Value");
                _Carrier_Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Carrier_Value");
                OnCarrier_ValueChanged();
            }
        }
        private global::System.String _Carrier_Value;
        partial void OnCarrier_ValueChanging(global::System.String value);
        partial void OnCarrier_ValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Users_Carrier", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Sportzly.Model.FK_Users_Carrier", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Sportzly.Model.FK_Users_Carrier", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="DocFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocFile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static DocFile CreateDocFile(global::System.Int64 id)
        {
            DocFile docFile = new DocFile();
            docFile.Id = id;
            return docFile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DocTitleId
        {
            get
            {
                return _DocTitleId;
            }
            set
            {
                OnDocTitleIdChanging(value);
                ReportPropertyChanging("DocTitleId");
                _DocTitleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocTitleId");
                OnDocTitleIdChanged();
            }
        }
        private Nullable<global::System.Int64> _DocTitleId;
        partial void OnDocTitleIdChanging(Nullable<global::System.Int64> value);
        partial void OnDocTitleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private Nullable<global::System.Decimal> _OwnerId;
        partial void OnOwnerIdChanging(Nullable<global::System.Decimal> value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UrlPath
        {
            get
            {
                return _UrlPath;
            }
            set
            {
                OnUrlPathChanging(value);
                ReportPropertyChanging("UrlPath");
                _UrlPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UrlPath");
                OnUrlPathChanged();
            }
        }
        private global::System.String _UrlPath;
        partial void OnUrlPathChanging(global::System.String value);
        partial void OnUrlPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PostDate
        {
            get
            {
                return _PostDate;
            }
            set
            {
                OnPostDateChanging(value);
                ReportPropertyChanging("PostDate");
                _PostDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostDate");
                OnPostDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PostDate;
        partial void OnPostDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Files_DocumentTitle", "DocumentTitle")]
        public DocumentTitle DocumentTitle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentTitle>("Sportzly.Model.FK_Files_DocumentTitle", "DocumentTitle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentTitle>("Sportzly.Model.FK_Files_DocumentTitle", "DocumentTitle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentTitle> DocumentTitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentTitle>("Sportzly.Model.FK_Files_DocumentTitle", "DocumentTitle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentTitle>("Sportzly.Model.FK_Files_DocumentTitle", "DocumentTitle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Files_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Files_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Files_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Files_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_Files_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="DocumentTitle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentTitle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentTitle object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="ownerID">Initial value of the OwnerID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="isPublic">Initial value of the IsPublic property.</param>
        public static DocumentTitle CreateDocumentTitle(global::System.Int64 id, global::System.Decimal ownerID, global::System.String title, global::System.DateTime createdDate, global::System.Boolean isPublic)
        {
            DocumentTitle documentTitle = new DocumentTitle();
            documentTitle.Id = id;
            documentTitle.OwnerID = ownerID;
            documentTitle.Title = title;
            documentTitle.CreatedDate = createdDate;
            documentTitle.IsPublic = isPublic;
            return documentTitle;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OwnerID
        {
            get
            {
                return _OwnerID;
            }
            set
            {
                OnOwnerIDChanging(value);
                ReportPropertyChanging("OwnerID");
                _OwnerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerID");
                OnOwnerIDChanged();
            }
        }
        private global::System.Decimal _OwnerID;
        partial void OnOwnerIDChanging(global::System.Decimal value);
        partial void OnOwnerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPublic
        {
            get
            {
                return _IsPublic;
            }
            set
            {
                OnIsPublicChanging(value);
                ReportPropertyChanging("IsPublic");
                _IsPublic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPublic");
                OnIsPublicChanged();
            }
        }
        private global::System.Boolean _IsPublic;
        partial void OnIsPublicChanging(global::System.Boolean value);
        partial void OnIsPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private Nullable<global::System.Int64> _TeamId;
        partial void OnTeamIdChanging(Nullable<global::System.Int64> value);
        partial void OnTeamIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_DocumentTitle_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_DocumentTitle_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_DocumentTitle_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_DocumentTitle_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_DocumentTitle_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Files_DocumentTitle", "File")]
        public EntityCollection<DocFile> Files
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DocFile>("Sportzly.Model.FK_Files_DocumentTitle", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DocFile>("Sportzly.Model.FK_Files_DocumentTitle", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Activities_DocumentTitle", "Activity")]
        public EntityCollection<Activity> Activities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("Sportzly.Model.FK_Activities_DocumentTitle", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("Sportzly.Model.FK_Activities_DocumentTitle", "Activity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="ErrorLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ErrorLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ErrorLog object.
        /// </summary>
        /// <param name="errorLogID">Initial value of the ErrorLogID property.</param>
        /// <param name="errorNumber">Initial value of the ErrorNumber property.</param>
        /// <param name="errorMessage">Initial value of the ErrorMessage property.</param>
        public static ErrorLog CreateErrorLog(global::System.Int32 errorLogID, global::System.Int32 errorNumber, global::System.String errorMessage)
        {
            ErrorLog errorLog = new ErrorLog();
            errorLog.ErrorLogID = errorLogID;
            errorLog.ErrorNumber = errorNumber;
            errorLog.ErrorMessage = errorMessage;
            return errorLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ErrorLogID
        {
            get
            {
                return _ErrorLogID;
            }
            set
            {
                if (_ErrorLogID != value)
                {
                    OnErrorLogIDChanging(value);
                    ReportPropertyChanging("ErrorLogID");
                    _ErrorLogID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ErrorLogID");
                    OnErrorLogIDChanged();
                }
            }
        }
        private global::System.Int32 _ErrorLogID;
        partial void OnErrorLogIDChanging(global::System.Int32 value);
        partial void OnErrorLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ErrorTime
        {
            get
            {
                return _ErrorTime;
            }
            set
            {
                OnErrorTimeChanging(value);
                ReportPropertyChanging("ErrorTime");
                _ErrorTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ErrorTime");
                OnErrorTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ErrorTime;
        partial void OnErrorTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnErrorTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ErrorNumber
        {
            get
            {
                return _ErrorNumber;
            }
            set
            {
                OnErrorNumberChanging(value);
                ReportPropertyChanging("ErrorNumber");
                _ErrorNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ErrorNumber");
                OnErrorNumberChanged();
            }
        }
        private global::System.Int32 _ErrorNumber;
        partial void OnErrorNumberChanging(global::System.Int32 value);
        partial void OnErrorNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ErrorSeverity
        {
            get
            {
                return _ErrorSeverity;
            }
            set
            {
                OnErrorSeverityChanging(value);
                ReportPropertyChanging("ErrorSeverity");
                _ErrorSeverity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ErrorSeverity");
                OnErrorSeverityChanged();
            }
        }
        private Nullable<global::System.Int32> _ErrorSeverity;
        partial void OnErrorSeverityChanging(Nullable<global::System.Int32> value);
        partial void OnErrorSeverityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ErrorState
        {
            get
            {
                return _ErrorState;
            }
            set
            {
                OnErrorStateChanging(value);
                ReportPropertyChanging("ErrorState");
                _ErrorState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ErrorState");
                OnErrorStateChanged();
            }
        }
        private Nullable<global::System.Int32> _ErrorState;
        partial void OnErrorStateChanging(Nullable<global::System.Int32> value);
        partial void OnErrorStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorProcedure
        {
            get
            {
                return _ErrorProcedure;
            }
            set
            {
                OnErrorProcedureChanging(value);
                ReportPropertyChanging("ErrorProcedure");
                _ErrorProcedure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorProcedure");
                OnErrorProcedureChanged();
            }
        }
        private global::System.String _ErrorProcedure;
        partial void OnErrorProcedureChanging(global::System.String value);
        partial void OnErrorProcedureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ErrorLine
        {
            get
            {
                return _ErrorLine;
            }
            set
            {
                OnErrorLineChanging(value);
                ReportPropertyChanging("ErrorLine");
                _ErrorLine = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ErrorLine");
                OnErrorLineChanged();
            }
        }
        private Nullable<global::System.Int32> _ErrorLine;
        partial void OnErrorLineChanging(Nullable<global::System.Int32> value);
        partial void OnErrorLineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ErrorMessage
        {
            get
            {
                return _ErrorMessage;
            }
            set
            {
                OnErrorMessageChanging(value);
                ReportPropertyChanging("ErrorMessage");
                _ErrorMessage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ErrorMessage");
                OnErrorMessageChanged();
            }
        }
        private global::System.String _ErrorMessage;
        partial void OnErrorMessageChanging(global::System.String value);
        partial void OnErrorMessageChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="eventDate">Initial value of the EventDate property.</param>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        /// <param name="ownerId">Initial value of the OwnerId property.</param>
        public static Event CreateEvent(global::System.Decimal id, global::System.String name, global::System.DateTime eventDate, global::System.Int32 typeId, global::System.Decimal ownerId)
        {
            Event @event = new Event();
            @event.Id = id;
            @event.Name = name;
            @event.EventDate = eventDate;
            @event.TypeId = typeId;
            @event.OwnerId = ownerId;
            return @event;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventDate
        {
            get
            {
                return _EventDate;
            }
            set
            {
                OnEventDateChanging(value);
                ReportPropertyChanging("EventDate");
                _EventDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventDate");
                OnEventDateChanged();
            }
        }
        private global::System.DateTime _EventDate;
        partial void OnEventDateChanging(global::System.DateTime value);
        partial void OnEventDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                OnTypeIdChanging(value);
                ReportPropertyChanging("TypeId");
                _TypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeId");
                OnTypeIdChanged();
            }
        }
        private global::System.Int32 _TypeId;
        partial void OnTypeIdChanging(global::System.Int32 value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private global::System.Decimal _OwnerId;
        partial void OnOwnerIdChanging(global::System.Decimal value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbEventGroup_tbEvents", "EventGroup")]
        public EntityCollection<EventGroup> EventGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventGroup>("Sportzly.Model.FK_tbEventGroup_tbEvents", "EventGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventGroup>("Sportzly.Model.FK_tbEventGroup_tbEvents", "EventGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbEventPersonal_tbEvents", "EventPersonal")]
        public EntityCollection<EventPersonal> EventPersonals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventPersonal>("Sportzly.Model.FK_tbEventPersonal_tbEvents", "EventPersonal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventPersonal>("Sportzly.Model.FK_tbEventPersonal_tbEvents", "EventPersonal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbEvents_tbEvents", "EventTypes")]
        public EventType EventType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("Sportzly.Model.FK_tbEvents_tbEvents", "EventTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("Sportzly.Model.FK_tbEvents_tbEvents", "EventTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventType> EventTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("Sportzly.Model.FK_tbEvents_tbEvents", "EventTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventType>("Sportzly.Model.FK_tbEvents_tbEvents", "EventTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbEvents_tbUsers", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbEvents_tbUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbEvents_tbUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbEvents_tbUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_tbEvents_tbUsers", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbEventStatus_tbEvents", "EventStatus")]
        public EntityCollection<EventStatu> EventStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventStatu>("Sportzly.Model.FK_tbEventStatus_tbEvents", "EventStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventStatu>("Sportzly.Model.FK_tbEventStatus_tbEvents", "EventStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbEventTeam_tbEvents", "EventTeam")]
        public EntityCollection<EventTeam> EventTeams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventTeam>("Sportzly.Model.FK_tbEventTeam_tbEvents", "EventTeam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventTeam>("Sportzly.Model.FK_tbEventTeam_tbEvents", "EventTeam", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="EventGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        public static EventGroup CreateEventGroup(global::System.Decimal id, global::System.Decimal eventId, global::System.Decimal groupId)
        {
            EventGroup eventGroup = new EventGroup();
            eventGroup.Id = id;
            eventGroup.EventId = eventId;
            eventGroup.GroupId = groupId;
            return eventGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private global::System.Decimal _EventId;
        partial void OnEventIdChanging(global::System.Decimal value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Decimal _GroupId;
        partial void OnGroupIdChanging(global::System.Decimal value);
        partial void OnGroupIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbEventGroup_tbEvents", "Events")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Sportzly.Model.FK_tbEventGroup_tbEvents", "Events").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Sportzly.Model.FK_tbEventGroup_tbEvents", "Events").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Sportzly.Model.FK_tbEventGroup_tbEvents", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("Sportzly.Model.FK_tbEventGroup_tbEvents", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbEventGroup_tbGroups", "Groups")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Sportzly.Model.FK_tbEventGroup_tbGroups", "Groups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Sportzly.Model.FK_tbEventGroup_tbGroups", "Groups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Sportzly.Model.FK_tbEventGroup_tbGroups", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("Sportzly.Model.FK_tbEventGroup_tbGroups", "Groups", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="EventPersonal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventPersonal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventPersonal object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static EventPersonal CreateEventPersonal(global::System.Decimal id, global::System.Decimal eventId, global::System.Decimal userId)
        {
            EventPersonal eventPersonal = new EventPersonal();
            eventPersonal.Id = id;
            eventPersonal.EventId = eventId;
            eventPersonal.UserId = userId;
            return eventPersonal;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private global::System.Decimal _EventId;
        partial void OnEventIdChanging(global::System.Decimal value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Decimal _UserId;
        partial void OnUserIdChanging(global::System.Decimal value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbEventPersonal_tbEvents", "Events")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Sportzly.Model.FK_tbEventPersonal_tbEvents", "Events").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Sportzly.Model.FK_tbEventPersonal_tbEvents", "Events").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Sportzly.Model.FK_tbEventPersonal_tbEvents", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("Sportzly.Model.FK_tbEventPersonal_tbEvents", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbEventPersonal_tbUsers", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbEventPersonal_tbUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbEventPersonal_tbUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbEventPersonal_tbUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_tbEventPersonal_tbUsers", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="EventStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventStatu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="responseDate">Initial value of the ResponseDate property.</param>
        /// <param name="isAccepted">Initial value of the IsAccepted property.</param>
        public static EventStatu CreateEventStatu(global::System.Decimal id, global::System.Decimal eventId, global::System.Decimal userId, global::System.DateTime responseDate, global::System.Boolean isAccepted)
        {
            EventStatu eventStatu = new EventStatu();
            eventStatu.Id = id;
            eventStatu.EventId = eventId;
            eventStatu.UserId = userId;
            eventStatu.ResponseDate = responseDate;
            eventStatu.IsAccepted = isAccepted;
            return eventStatu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private global::System.Decimal _EventId;
        partial void OnEventIdChanging(global::System.Decimal value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Decimal _UserId;
        partial void OnUserIdChanging(global::System.Decimal value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ResponseDate
        {
            get
            {
                return _ResponseDate;
            }
            set
            {
                OnResponseDateChanging(value);
                ReportPropertyChanging("ResponseDate");
                _ResponseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponseDate");
                OnResponseDateChanged();
            }
        }
        private global::System.DateTime _ResponseDate;
        partial void OnResponseDateChanging(global::System.DateTime value);
        partial void OnResponseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAccepted
        {
            get
            {
                return _IsAccepted;
            }
            set
            {
                OnIsAcceptedChanging(value);
                ReportPropertyChanging("IsAccepted");
                _IsAccepted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAccepted");
                OnIsAcceptedChanged();
            }
        }
        private global::System.Boolean _IsAccepted;
        partial void OnIsAcceptedChanging(global::System.Boolean value);
        partial void OnIsAcceptedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbEventStatus_tbEvents", "Events")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Sportzly.Model.FK_tbEventStatus_tbEvents", "Events").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Sportzly.Model.FK_tbEventStatus_tbEvents", "Events").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Sportzly.Model.FK_tbEventStatus_tbEvents", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("Sportzly.Model.FK_tbEventStatus_tbEvents", "Events", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="EventTeam")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventTeam : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventTeam object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="teamId">Initial value of the TeamId property.</param>
        public static EventTeam CreateEventTeam(global::System.Decimal id, global::System.Decimal eventId, global::System.Int64 teamId)
        {
            EventTeam eventTeam = new EventTeam();
            eventTeam.Id = id;
            eventTeam.EventId = eventId;
            eventTeam.TeamId = teamId;
            return eventTeam;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private global::System.Decimal _EventId;
        partial void OnEventIdChanging(global::System.Decimal value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private global::System.Int64 _TeamId;
        partial void OnTeamIdChanging(global::System.Int64 value);
        partial void OnTeamIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbEventTeam_tbEvents", "Events")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Sportzly.Model.FK_tbEventTeam_tbEvents", "Events").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Sportzly.Model.FK_tbEventTeam_tbEvents", "Events").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Sportzly.Model.FK_tbEventTeam_tbEvents", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("Sportzly.Model.FK_tbEventTeam_tbEvents", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbEventTeam_tbTeams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbEventTeam_tbTeams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbEventTeam_tbTeams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbEventTeam_tbTeams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("Sportzly.Model.FK_tbEventTeam_tbTeams", "Teams", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="EventType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static EventType CreateEventType(global::System.Int32 id, global::System.String type)
        {
            EventType eventType = new EventType();
            eventType.Id = id;
            eventType.Type = type;
            return eventType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbEvents_tbEvents", "Events")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("Sportzly.Model.FK_tbEvents_tbEvents", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("Sportzly.Model.FK_tbEvents_tbEvents", "Events", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Feed")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Feed : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Feed object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Feed CreateFeed(global::System.Int32 id)
        {
            Feed feed = new Feed();
            feed.Id = id;
            return feed;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FeedSource
        {
            get
            {
                return _FeedSource;
            }
            set
            {
                OnFeedSourceChanging(value);
                ReportPropertyChanging("FeedSource");
                _FeedSource = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FeedSource");
                OnFeedSourceChanged();
            }
        }
        private global::System.String _FeedSource;
        partial void OnFeedSourceChanging(global::System.String value);
        partial void OnFeedSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FeedUrl
        {
            get
            {
                return _FeedUrl;
            }
            set
            {
                OnFeedUrlChanging(value);
                ReportPropertyChanging("FeedUrl");
                _FeedUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FeedUrl");
                OnFeedUrlChanged();
            }
        }
        private global::System.String _FeedUrl;
        partial void OnFeedUrlChanging(global::System.String value);
        partial void OnFeedUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedSport
        {
            get
            {
                return _FeedSport;
            }
            set
            {
                OnFeedSportChanging(value);
                ReportPropertyChanging("FeedSport");
                _FeedSport = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedSport");
                OnFeedSportChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedSport;
        partial void OnFeedSportChanging(Nullable<global::System.Int32> value);
        partial void OnFeedSportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="FeedContent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedContent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedContent object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static FeedContent CreateFeedContent(global::System.Int64 id)
        {
            FeedContent feedContent = new FeedContent();
            feedContent.Id = id;
            return feedContent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedId
        {
            get
            {
                return _FeedId;
            }
            set
            {
                OnFeedIdChanging(value);
                ReportPropertyChanging("FeedId");
                _FeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedId");
                OnFeedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedId;
        partial void OnFeedIdChanging(Nullable<global::System.Int32> value);
        partial void OnFeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Link
        {
            get
            {
                return _Link;
            }
            set
            {
                OnLinkChanging(value);
                ReportPropertyChanging("Link");
                _Link = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Link");
                OnLinkChanged();
            }
        }
        private global::System.String _Link;
        partial void OnLinkChanging(global::System.String value);
        partial void OnLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PublishedDate
        {
            get
            {
                return _PublishedDate;
            }
            set
            {
                OnPublishedDateChanging(value);
                ReportPropertyChanging("PublishedDate");
                _PublishedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublishedDate");
                OnPublishedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PublishedDate;
        partial void OnPublishedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPublishedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Video
        {
            get
            {
                return _Video;
            }
            set
            {
                OnVideoChanging(value);
                ReportPropertyChanging("Video");
                _Video = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Video");
                OnVideoChanged();
            }
        }
        private global::System.String _Video;
        partial void OnVideoChanging(global::System.String value);
        partial void OnVideoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreated;
        partial void OnDateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreatedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Follower")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Follower : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Follower object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="followerId">Initial value of the FollowerId property.</param>
        /// <param name="followingId">Initial value of the FollowingId property.</param>
        public static Follower CreateFollower(global::System.Decimal id, global::System.Decimal followerId, global::System.Decimal followingId)
        {
            Follower follower = new Follower();
            follower.Id = id;
            follower.FollowerId = followerId;
            follower.FollowingId = followingId;
            return follower;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FollowerId
        {
            get
            {
                return _FollowerId;
            }
            set
            {
                OnFollowerIdChanging(value);
                ReportPropertyChanging("FollowerId");
                _FollowerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FollowerId");
                OnFollowerIdChanged();
            }
        }
        private global::System.Decimal _FollowerId;
        partial void OnFollowerIdChanging(global::System.Decimal value);
        partial void OnFollowerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FollowingId
        {
            get
            {
                return _FollowingId;
            }
            set
            {
                OnFollowingIdChanging(value);
                ReportPropertyChanging("FollowingId");
                _FollowingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FollowingId");
                OnFollowingIdChanged();
            }
        }
        private global::System.Decimal _FollowingId;
        partial void OnFollowingIdChanging(global::System.Decimal value);
        partial void OnFollowingIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbFollowers_follower", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbFollowers_follower", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbFollowers_follower", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbFollowers_follower", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_tbFollowers_follower", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbFollowers_following", "Users")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbFollowers_following", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbFollowers_following", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbFollowers_following", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_tbFollowers_following", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Friend")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Friend : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Friend object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="friendId">Initial value of the FriendId property.</param>
        public static Friend CreateFriend(global::System.Decimal id, global::System.Decimal userId, global::System.Decimal friendId)
        {
            Friend friend = new Friend();
            friend.Id = id;
            friend.UserId = userId;
            friend.FriendId = friendId;
            return friend;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Decimal _UserId;
        partial void OnUserIdChanging(global::System.Decimal value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FriendId
        {
            get
            {
                return _FriendId;
            }
            set
            {
                OnFriendIdChanging(value);
                ReportPropertyChanging("FriendId");
                _FriendId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FriendId");
                OnFriendIdChanged();
            }
        }
        private global::System.Decimal _FriendId;
        partial void OnFriendIdChanging(global::System.Decimal value);
        partial void OnFriendIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsApproved;
        partial void OnIsApprovedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsApprovedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Friends_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Friends_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Friends_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Friends_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_Friends_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbFriends_User", "Users")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbFriends_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbFriends_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbFriends_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_tbFriends_User", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Gender")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Gender : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Gender object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="gender1">Initial value of the Gender1 property.</param>
        public static Gender CreateGender(global::System.Int32 id, global::System.String gender1)
        {
            Gender gender = new Gender();
            gender.Id = id;
            gender.Gender1 = gender1;
            return gender;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Gender1
        {
            get
            {
                return _Gender1;
            }
            set
            {
                OnGender1Changing(value);
                ReportPropertyChanging("Gender1");
                _Gender1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Gender1");
                OnGender1Changed();
            }
        }
        private global::System.String _Gender1;
        partial void OnGender1Changing(global::System.String value);
        partial void OnGender1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Users_Genders", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Sportzly.Model.FK_Users_Genders", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Sportzly.Model.FK_Users_Genders", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="ownerId">Initial value of the OwnerId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        public static Group CreateGroup(global::System.Decimal id, global::System.Decimal ownerId, global::System.DateTime createdOn)
        {
            Group group = new Group();
            group.Id = id;
            group.OwnerId = ownerId;
            group.CreatedOn = createdOn;
            return group;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private global::System.Decimal _OwnerId;
        partial void OnOwnerIdChanging(global::System.Decimal value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryId;
        partial void OnCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccessId
        {
            get
            {
                return _AccessId;
            }
            set
            {
                OnAccessIdChanging(value);
                ReportPropertyChanging("AccessId");
                _AccessId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessId");
                OnAccessIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AccessId;
        partial void OnAccessIdChanging(Nullable<global::System.Int32> value);
        partial void OnAccessIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImagePath
        {
            get
            {
                return _ImagePath;
            }
            set
            {
                OnImagePathChanging(value);
                ReportPropertyChanging("ImagePath");
                _ImagePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImagePath");
                OnImagePathChanged();
            }
        }
        private global::System.String _ImagePath;
        partial void OnImagePathChanging(global::System.String value);
        partial void OnImagePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPostOn
        {
            get
            {
                return _LastPostOn;
            }
            set
            {
                OnLastPostOnChanging(value);
                ReportPropertyChanging("LastPostOn");
                _LastPostOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPostOn");
                OnLastPostOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPostOn;
        partial void OnLastPostOnChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPostOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Country
        {
            get
            {
                return StructuralObject.GetValidValue(_Country);
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.Byte[] _Country;
        partial void OnCountryChanging(global::System.Byte[] value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbActivityGroup_tbGroups", "ActivityGroup")]
        public EntityCollection<ActivityGroup> ActivityGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActivityGroup>("Sportzly.Model.FK_tbActivityGroup_tbGroups", "ActivityGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActivityGroup>("Sportzly.Model.FK_tbActivityGroup_tbGroups", "ActivityGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbEventGroup_tbGroups", "EventGroup")]
        public EntityCollection<EventGroup> EventGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventGroup>("Sportzly.Model.FK_tbEventGroup_tbGroups", "EventGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventGroup>("Sportzly.Model.FK_tbEventGroup_tbGroups", "EventGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbGroups_tbGroupAccessTypes", "GroupAccessTypes")]
        public GroupAccessType GroupAccessType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupAccessType>("Sportzly.Model.FK_tbGroups_tbGroupAccessTypes", "GroupAccessTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupAccessType>("Sportzly.Model.FK_tbGroups_tbGroupAccessTypes", "GroupAccessTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupAccessType> GroupAccessTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupAccessType>("Sportzly.Model.FK_tbGroups_tbGroupAccessTypes", "GroupAccessTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupAccessType>("Sportzly.Model.FK_tbGroups_tbGroupAccessTypes", "GroupAccessTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbGroupAttributes_tbGroups", "GroupAttributes")]
        public EntityCollection<GroupAttribute> GroupAttributes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupAttribute>("Sportzly.Model.FK_tbGroupAttributes_tbGroups", "GroupAttributes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupAttribute>("Sportzly.Model.FK_tbGroupAttributes_tbGroups", "GroupAttributes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbGroups_tbGroupCategories", "GroupCategories")]
        public GroupCategory GroupCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupCategory>("Sportzly.Model.FK_tbGroups_tbGroupCategories", "GroupCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupCategory>("Sportzly.Model.FK_tbGroups_tbGroupCategories", "GroupCategories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupCategory> GroupCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupCategory>("Sportzly.Model.FK_tbGroups_tbGroupCategories", "GroupCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupCategory>("Sportzly.Model.FK_tbGroups_tbGroupCategories", "GroupCategories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbUserGroups_tbGroups", "GroupMembers")]
        public EntityCollection<GroupMember> GroupMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupMember>("Sportzly.Model.FK_tbUserGroups_tbGroups", "GroupMembers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupMember>("Sportzly.Model.FK_tbUserGroups_tbGroups", "GroupMembers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbGroups_author", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbGroups_author", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbGroups_author", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbGroups_author", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_tbGroups_author", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbGroupSports_tbGroups", "GroupSports")]
        public EntityCollection<GroupSport> GroupSports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupSport>("Sportzly.Model.FK_tbGroupSports_tbGroups", "GroupSports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupSport>("Sportzly.Model.FK_tbGroupSports_tbGroups", "GroupSports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="GroupAccessType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupAccessType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupAccessType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="accessType">Initial value of the AccessType property.</param>
        public static GroupAccessType CreateGroupAccessType(global::System.Int32 id, global::System.String accessType)
        {
            GroupAccessType groupAccessType = new GroupAccessType();
            groupAccessType.Id = id;
            groupAccessType.AccessType = accessType;
            return groupAccessType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccessType
        {
            get
            {
                return _AccessType;
            }
            set
            {
                OnAccessTypeChanging(value);
                ReportPropertyChanging("AccessType");
                _AccessType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccessType");
                OnAccessTypeChanged();
            }
        }
        private global::System.String _AccessType;
        partial void OnAccessTypeChanging(global::System.String value);
        partial void OnAccessTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbGroups_tbGroupAccessTypes", "Groups")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("Sportzly.Model.FK_tbGroups_tbGroupAccessTypes", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("Sportzly.Model.FK_tbGroups_tbGroupAccessTypes", "Groups", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="GroupAttribute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupAttribute : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupAttribute object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="attribute">Initial value of the Attribute property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        public static GroupAttribute CreateGroupAttribute(global::System.Decimal id, global::System.String attribute, global::System.Decimal groupId)
        {
            GroupAttribute groupAttribute = new GroupAttribute();
            groupAttribute.Id = id;
            groupAttribute.Attribute = attribute;
            groupAttribute.GroupId = groupId;
            return groupAttribute;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Attribute
        {
            get
            {
                return _Attribute;
            }
            set
            {
                OnAttributeChanging(value);
                ReportPropertyChanging("Attribute");
                _Attribute = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Attribute");
                OnAttributeChanged();
            }
        }
        private global::System.String _Attribute;
        partial void OnAttributeChanging(global::System.String value);
        partial void OnAttributeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Decimal _GroupId;
        partial void OnGroupIdChanging(global::System.Decimal value);
        partial void OnGroupIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbGroupAttributes_tbGroups", "Groups")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Sportzly.Model.FK_tbGroupAttributes_tbGroups", "Groups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Sportzly.Model.FK_tbGroupAttributes_tbGroups", "Groups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Sportzly.Model.FK_tbGroupAttributes_tbGroups", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("Sportzly.Model.FK_tbGroupAttributes_tbGroups", "Groups", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="GroupCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        public static GroupCategory CreateGroupCategory(global::System.Int32 id, global::System.String category)
        {
            GroupCategory groupCategory = new GroupCategory();
            groupCategory.Id = id;
            groupCategory.Category = category;
            return groupCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbGroups_tbGroupCategories", "Groups")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("Sportzly.Model.FK_tbGroups_tbGroupCategories", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("Sportzly.Model.FK_tbGroups_tbGroupCategories", "Groups", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="GroupMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupMember : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupMember object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        public static GroupMember CreateGroupMember(global::System.Decimal id, global::System.Decimal groupId)
        {
            GroupMember groupMember = new GroupMember();
            groupMember.Id = id;
            groupMember.GroupId = groupId;
            return groupMember;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Decimal _GroupId;
        partial void OnGroupIdChanging(global::System.Decimal value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MemberId
        {
            get
            {
                return _MemberId;
            }
            set
            {
                OnMemberIdChanging(value);
                ReportPropertyChanging("MemberId");
                _MemberId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberId");
                OnMemberIdChanged();
            }
        }
        private Nullable<global::System.Decimal> _MemberId;
        partial void OnMemberIdChanging(Nullable<global::System.Decimal> value);
        partial void OnMemberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> JoinDate
        {
            get
            {
                return _JoinDate;
            }
            set
            {
                OnJoinDateChanging(value);
                ReportPropertyChanging("JoinDate");
                _JoinDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JoinDate");
                OnJoinDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _JoinDate;
        partial void OnJoinDateChanging(Nullable<global::System.DateTime> value);
        partial void OnJoinDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsApproved;
        partial void OnIsApprovedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsBlocked
        {
            get
            {
                return _IsBlocked;
            }
            set
            {
                OnIsBlockedChanging(value);
                ReportPropertyChanging("IsBlocked");
                _IsBlocked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBlocked");
                OnIsBlockedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsBlocked;
        partial void OnIsBlockedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsBlockedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbUserGroups_tbGroups", "Groups")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Sportzly.Model.FK_tbUserGroups_tbGroups", "Groups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Sportzly.Model.FK_tbUserGroups_tbGroups", "Groups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Sportzly.Model.FK_tbUserGroups_tbGroups", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("Sportzly.Model.FK_tbUserGroups_tbGroups", "Groups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbUserGroups_tbUsers", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbUserGroups_tbUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbUserGroups_tbUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbUserGroups_tbUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_tbUserGroups_tbUsers", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="GroupSport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupSport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupSport object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="sportId">Initial value of the SportId property.</param>
        public static GroupSport CreateGroupSport(global::System.Decimal id, global::System.Decimal groupId, global::System.Int32 sportId)
        {
            GroupSport groupSport = new GroupSport();
            groupSport.Id = id;
            groupSport.GroupId = groupId;
            groupSport.SportId = sportId;
            return groupSport;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Decimal _GroupId;
        partial void OnGroupIdChanging(global::System.Decimal value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportId
        {
            get
            {
                return _SportId;
            }
            set
            {
                OnSportIdChanging(value);
                ReportPropertyChanging("SportId");
                _SportId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportId");
                OnSportIdChanged();
            }
        }
        private global::System.Int32 _SportId;
        partial void OnSportIdChanging(global::System.Int32 value);
        partial void OnSportIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbGroupSports_tbGroups", "Groups")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Sportzly.Model.FK_tbGroupSports_tbGroups", "Groups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Sportzly.Model.FK_tbGroupSports_tbGroups", "Groups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Sportzly.Model.FK_tbGroupSports_tbGroups", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("Sportzly.Model.FK_tbGroupSports_tbGroups", "Groups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbGroupSports_tbTeamSports", "Sports")]
        public Sport Sport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("Sportzly.Model.FK_tbGroupSports_tbTeamSports", "Sports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("Sportzly.Model.FK_tbGroupSports_tbTeamSports", "Sports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> SportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("Sportzly.Model.FK_tbGroupSports_tbTeamSports", "Sports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("Sportzly.Model.FK_tbGroupSports_tbTeamSports", "Sports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Invitation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invitation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invitation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="inviteType">Initial value of the inviteType property.</param>
        /// <param name="inviteId">Initial value of the inviteId property.</param>
        /// <param name="inviteToken">Initial value of the inviteToken property.</param>
        public static Invitation CreateInvitation(global::System.Int64 id, global::System.String inviteType, global::System.Int64 inviteId, global::System.Guid inviteToken)
        {
            Invitation invitation = new Invitation();
            invitation.Id = id;
            invitation.inviteType = inviteType;
            invitation.inviteId = inviteId;
            invitation.inviteToken = inviteToken;
            return invitation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String inviteType
        {
            get
            {
                return _inviteType;
            }
            set
            {
                OninviteTypeChanging(value);
                ReportPropertyChanging("inviteType");
                _inviteType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("inviteType");
                OninviteTypeChanged();
            }
        }
        private global::System.String _inviteType;
        partial void OninviteTypeChanging(global::System.String value);
        partial void OninviteTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 inviteId
        {
            get
            {
                return _inviteId;
            }
            set
            {
                OninviteIdChanging(value);
                ReportPropertyChanging("inviteId");
                _inviteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("inviteId");
                OninviteIdChanged();
            }
        }
        private global::System.Int64 _inviteId;
        partial void OninviteIdChanging(global::System.Int64 value);
        partial void OninviteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid inviteToken
        {
            get
            {
                return _inviteToken;
            }
            set
            {
                OninviteTokenChanging(value);
                ReportPropertyChanging("inviteToken");
                _inviteToken = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("inviteToken");
                OninviteTokenChanged();
            }
        }
        private global::System.Guid _inviteToken;
        partial void OninviteTokenChanging(global::System.Guid value);
        partial void OninviteTokenChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="InviteEmailaddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InviteEmailaddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InviteEmailaddress object.
        /// </summary>
        /// <param name="inviteId">Initial value of the InviteId property.</param>
        /// <param name="isUnsubscribe">Initial value of the IsUnsubscribe property.</param>
        public static InviteEmailaddress CreateInviteEmailaddress(global::System.Int64 inviteId, global::System.Boolean isUnsubscribe)
        {
            InviteEmailaddress inviteEmailaddress = new InviteEmailaddress();
            inviteEmailaddress.InviteId = inviteId;
            inviteEmailaddress.IsUnsubscribe = isUnsubscribe;
            return inviteEmailaddress;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InviteId
        {
            get
            {
                return _InviteId;
            }
            set
            {
                if (_InviteId != value)
                {
                    OnInviteIdChanging(value);
                    ReportPropertyChanging("InviteId");
                    _InviteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InviteId");
                    OnInviteIdChanged();
                }
            }
        }
        private global::System.Int64 _InviteId;
        partial void OnInviteIdChanging(global::System.Int64 value);
        partial void OnInviteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InviteType
        {
            get
            {
                return _InviteType;
            }
            set
            {
                OnInviteTypeChanging(value);
                ReportPropertyChanging("InviteType");
                _InviteType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InviteType");
                OnInviteTypeChanged();
            }
        }
        private global::System.String _InviteType;
        partial void OnInviteTypeChanging(global::System.String value);
        partial void OnInviteTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InviteEmail
        {
            get
            {
                return _InviteEmail;
            }
            set
            {
                OnInviteEmailChanging(value);
                ReportPropertyChanging("InviteEmail");
                _InviteEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InviteEmail");
                OnInviteEmailChanged();
            }
        }
        private global::System.String _InviteEmail;
        partial void OnInviteEmailChanging(global::System.String value);
        partial void OnInviteEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> InviteRegistered
        {
            get
            {
                return _InviteRegistered;
            }
            set
            {
                OnInviteRegisteredChanging(value);
                ReportPropertyChanging("InviteRegistered");
                _InviteRegistered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InviteRegistered");
                OnInviteRegisteredChanged();
            }
        }
        private Nullable<global::System.Boolean> _InviteRegistered;
        partial void OnInviteRegisteredChanging(Nullable<global::System.Boolean> value);
        partial void OnInviteRegisteredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> InviteBy
        {
            get
            {
                return _InviteBy;
            }
            set
            {
                OnInviteByChanging(value);
                ReportPropertyChanging("InviteBy");
                _InviteBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InviteBy");
                OnInviteByChanged();
            }
        }
        private Nullable<global::System.Decimal> _InviteBy;
        partial void OnInviteByChanging(Nullable<global::System.Decimal> value);
        partial void OnInviteByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InviteDate
        {
            get
            {
                return _InviteDate;
            }
            set
            {
                OnInviteDateChanging(value);
                ReportPropertyChanging("InviteDate");
                _InviteDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InviteDate");
                OnInviteDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InviteDate;
        partial void OnInviteDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInviteDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private Nullable<global::System.Int64> _TeamId;
        partial void OnTeamIdChanging(Nullable<global::System.Int64> value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsUnsubscribe
        {
            get
            {
                return _IsUnsubscribe;
            }
            set
            {
                OnIsUnsubscribeChanging(value);
                ReportPropertyChanging("IsUnsubscribe");
                _IsUnsubscribe = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsUnsubscribe");
                OnIsUnsubscribeChanged();
            }
        }
        private global::System.Boolean _IsUnsubscribe;
        partial void OnIsUnsubscribeChanging(global::System.Boolean value);
        partial void OnIsUnsubscribeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_InviteEmailaddress_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_InviteEmailaddress_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_InviteEmailaddress_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_InviteEmailaddress_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_InviteEmailaddress_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_InviteEmailaddress_Teams", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_InviteEmailaddress_Teams", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_InviteEmailaddress_Teams", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_InviteEmailaddress_Teams", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("Sportzly.Model.FK_InviteEmailaddress_Teams", "Team", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Locality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Locality : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Locality object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Locality CreateLocality(global::System.Int32 id)
        {
            Locality locality = new Locality();
            locality.Id = id;
            return locality;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Province
        {
            get
            {
                return _Province;
            }
            set
            {
                OnProvinceChanging(value);
                ReportPropertyChanging("Province");
                _Province = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Province");
                OnProvinceChanged();
            }
        }
        private global::System.String _Province;
        partial void OnProvinceChanging(global::System.String value);
        partial void OnProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Address_Locality", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("Sportzly.Model.FK_Address_Locality", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("Sportzly.Model.FK_Address_Locality", "Address", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="MaritalStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MaritalStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MaritalStatu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static MaritalStatu CreateMaritalStatu(global::System.Int32 id, global::System.String status)
        {
            MaritalStatu maritalStatu = new MaritalStatu();
            maritalStatu.Id = id;
            maritalStatu.Status = status;
            return maritalStatu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbUsers_tbUsers", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Sportzly.Model.FK_tbUsers_tbUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Sportzly.Model.FK_tbUsers_tbUsers", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Metric")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Metric : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Metric object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="metricKeyId">Initial value of the MetricKeyId property.</param>
        /// <param name="metricValueId">Initial value of the MetricValueId property.</param>
        public static Metric CreateMetric(global::System.Int64 id, global::System.Int64 metricKeyId, global::System.Int64 metricValueId)
        {
            Metric metric = new Metric();
            metric.Id = id;
            metric.MetricKeyId = metricKeyId;
            metric.MetricValueId = metricValueId;
            return metric;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MetricKeyId
        {
            get
            {
                return _MetricKeyId;
            }
            set
            {
                OnMetricKeyIdChanging(value);
                ReportPropertyChanging("MetricKeyId");
                _MetricKeyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MetricKeyId");
                OnMetricKeyIdChanged();
            }
        }
        private global::System.Int64 _MetricKeyId;
        partial void OnMetricKeyIdChanging(global::System.Int64 value);
        partial void OnMetricKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MetricValueId
        {
            get
            {
                return _MetricValueId;
            }
            set
            {
                OnMetricValueIdChanging(value);
                ReportPropertyChanging("MetricValueId");
                _MetricValueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MetricValueId");
                OnMetricValueIdChanged();
            }
        }
        private global::System.Int64 _MetricValueId;
        partial void OnMetricValueIdChanging(global::System.Int64 value);
        partial void OnMetricValueIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Metrics_MetricKeys", "MetricKeys")]
        public MetricKey MetricKey
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetricKey>("Sportzly.Model.FK_Metrics_MetricKeys", "MetricKeys").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetricKey>("Sportzly.Model.FK_Metrics_MetricKeys", "MetricKeys").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MetricKey> MetricKeyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetricKey>("Sportzly.Model.FK_Metrics_MetricKeys", "MetricKeys");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MetricKey>("Sportzly.Model.FK_Metrics_MetricKeys", "MetricKeys", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Metrics_MetricValues", "MetricValues")]
        public MetricValue MetricValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetricValue>("Sportzly.Model.FK_Metrics_MetricValues", "MetricValues").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetricValue>("Sportzly.Model.FK_Metrics_MetricValues", "MetricValues").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MetricValue> MetricValueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MetricValue>("Sportzly.Model.FK_Metrics_MetricValues", "MetricValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MetricValue>("Sportzly.Model.FK_Metrics_MetricValues", "MetricValues", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_UserMetrics_Metrics", "UserMetrics")]
        public EntityCollection<UserMetric> UserMetrics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserMetric>("Sportzly.Model.FK_UserMetrics_Metrics", "UserMetrics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserMetric>("Sportzly.Model.FK_UserMetrics_Metrics", "UserMetrics", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="MetricKey")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MetricKey : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MetricKey object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        public static MetricKey CreateMetricKey(global::System.Int64 id, global::System.String key)
        {
            MetricKey metricKey = new MetricKey();
            metricKey.Id = id;
            metricKey.Key = key;
            return metricKey;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Metrics_MetricKeys", "Metrics")]
        public EntityCollection<Metric> Metrics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Metric>("Sportzly.Model.FK_Metrics_MetricKeys", "Metrics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Metric>("Sportzly.Model.FK_Metrics_MetricKeys", "Metrics", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="MetricValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MetricValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MetricValue object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static MetricValue CreateMetricValue(global::System.Int64 id, global::System.String value)
        {
            MetricValue metricValue = new MetricValue();
            metricValue.Id = id;
            metricValue.Value = value;
            return metricValue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Metrics_MetricValues", "Metrics")]
        public EntityCollection<Metric> Metrics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Metric>("Sportzly.Model.FK_Metrics_MetricValues", "Metrics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Metric>("Sportzly.Model.FK_Metrics_MetricValues", "Metrics", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Photo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Photo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Photo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="photoPath">Initial value of the PhotoPath property.</param>
        public static Photo CreatePhoto(global::System.Int64 id, global::System.String photoPath)
        {
            Photo photo = new Photo();
            photo.Id = id;
            photo.PhotoPath = photoPath;
            return photo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhotoPath
        {
            get
            {
                return _PhotoPath;
            }
            set
            {
                OnPhotoPathChanging(value);
                ReportPropertyChanging("PhotoPath");
                _PhotoPath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhotoPath");
                OnPhotoPathChanged();
            }
        }
        private global::System.String _PhotoPath;
        partial void OnPhotoPathChanging(global::System.String value);
        partial void OnPhotoPathChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Users_Photos", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Sportzly.Model.FK_Users_Photos", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Sportzly.Model.FK_Users_Photos", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Poll")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Poll : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Poll object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Poll CreatePoll(global::System.Int64 id)
        {
            Poll poll = new Poll();
            poll.ID = id;
            return poll;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PollQuestion
        {
            get
            {
                return _PollQuestion;
            }
            set
            {
                OnPollQuestionChanging(value);
                ReportPropertyChanging("PollQuestion");
                _PollQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PollQuestion");
                OnPollQuestionChanged();
            }
        }
        private global::System.String _PollQuestion;
        partial void OnPollQuestionChanging(global::System.String value);
        partial void OnPollQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PollExpiry
        {
            get
            {
                return _PollExpiry;
            }
            set
            {
                OnPollExpiryChanging(value);
                ReportPropertyChanging("PollExpiry");
                _PollExpiry = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PollExpiry");
                OnPollExpiryChanged();
            }
        }
        private Nullable<global::System.DateTime> _PollExpiry;
        partial void OnPollExpiryChanging(Nullable<global::System.DateTime> value);
        partial void OnPollExpiryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private Nullable<global::System.Int64> _TeamId;
        partial void OnTeamIdChanging(Nullable<global::System.Int64> value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Decimal> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Decimal> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> EndPoll
        {
            get
            {
                return _EndPoll;
            }
            set
            {
                OnEndPollChanging(value);
                ReportPropertyChanging("EndPoll");
                _EndPoll = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndPoll");
                OnEndPollChanged();
            }
        }
        private Nullable<global::System.Boolean> _EndPoll;
        partial void OnEndPollChanging(Nullable<global::System.Boolean> value);
        partial void OnEndPollChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ResultSent
        {
            get
            {
                return _ResultSent;
            }
            set
            {
                OnResultSentChanging(value);
                ReportPropertyChanging("ResultSent");
                _ResultSent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultSent");
                OnResultSentChanged();
            }
        }
        private Nullable<global::System.Boolean> _ResultSent;
        partial void OnResultSentChanging(Nullable<global::System.Boolean> value);
        partial void OnResultSentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_PollOptions_Polls", "PollOption")]
        public EntityCollection<PollOption> PollOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PollOption>("Sportzly.Model.FK_PollOptions_Polls", "PollOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PollOption>("Sportzly.Model.FK_PollOptions_Polls", "PollOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Polls_Teams", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_Polls_Teams", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_Polls_Teams", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_Polls_Teams", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("Sportzly.Model.FK_Polls_Teams", "Team", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Polls_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Polls_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Polls_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Polls_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_Polls_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Votes_Polls", "Vote")]
        public EntityCollection<Vote> Votes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vote>("Sportzly.Model.FK_Votes_Polls", "Vote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vote>("Sportzly.Model.FK_Votes_Polls", "Vote", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="PollOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PollOption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PollOption object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static PollOption CreatePollOption(global::System.Int64 id)
        {
            PollOption pollOption = new PollOption();
            pollOption.ID = id;
            return pollOption;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PollId
        {
            get
            {
                return _PollId;
            }
            set
            {
                OnPollIdChanging(value);
                ReportPropertyChanging("PollId");
                _PollId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PollId");
                OnPollIdChanged();
            }
        }
        private Nullable<global::System.Int64> _PollId;
        partial void OnPollIdChanging(Nullable<global::System.Int64> value);
        partial void OnPollIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OptionPoll
        {
            get
            {
                return _OptionPoll;
            }
            set
            {
                OnOptionPollChanging(value);
                ReportPropertyChanging("OptionPoll");
                _OptionPoll = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OptionPoll");
                OnOptionPollChanged();
            }
        }
        private global::System.String _OptionPoll;
        partial void OnOptionPollChanging(global::System.String value);
        partial void OnOptionPollChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_PollOptions_Polls", "Poll")]
        public Poll Poll
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("Sportzly.Model.FK_PollOptions_Polls", "Poll").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("Sportzly.Model.FK_PollOptions_Polls", "Poll").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Poll> PollReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("Sportzly.Model.FK_PollOptions_Polls", "Poll");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Poll>("Sportzly.Model.FK_PollOptions_Polls", "Poll", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Votes_PollOptions", "Vote")]
        public EntityCollection<Vote> Votes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vote>("Sportzly.Model.FK_Votes_PollOptions", "Vote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vote>("Sportzly.Model.FK_Votes_PollOptions", "Vote", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Result")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Result : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Result object.
        /// </summary>
        /// <param name="resultId">Initial value of the ResultId property.</param>
        /// <param name="gameId">Initial value of the GameId property.</param>
        public static Result CreateResult(global::System.Int64 resultId, global::System.Int64 gameId)
        {
            Result result = new Result();
            result.ResultId = resultId;
            result.GameId = gameId;
            return result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ResultId
        {
            get
            {
                return _ResultId;
            }
            set
            {
                if (_ResultId != value)
                {
                    OnResultIdChanging(value);
                    ReportPropertyChanging("ResultId");
                    _ResultId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResultId");
                    OnResultIdChanged();
                }
            }
        }
        private global::System.Int64 _ResultId;
        partial void OnResultIdChanging(global::System.Int64 value);
        partial void OnResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 GameId
        {
            get
            {
                return _GameId;
            }
            set
            {
                OnGameIdChanging(value);
                ReportPropertyChanging("GameId");
                _GameId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameId");
                OnGameIdChanged();
            }
        }
        private global::System.Int64 _GameId;
        partial void OnGameIdChanging(global::System.Int64 value);
        partial void OnGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Result1
        {
            get
            {
                return _Result1;
            }
            set
            {
                OnResult1Changing(value);
                ReportPropertyChanging("Result1");
                _Result1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Result1");
                OnResult1Changed();
            }
        }
        private global::System.String _Result1;
        partial void OnResult1Changing(global::System.String value);
        partial void OnResult1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResultUrl
        {
            get
            {
                return _ResultUrl;
            }
            set
            {
                OnResultUrlChanging(value);
                ReportPropertyChanging("ResultUrl");
                _ResultUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResultUrl");
                OnResultUrlChanged();
            }
        }
        private global::System.String _ResultUrl;
        partial void OnResultUrlChanging(global::System.String value);
        partial void OnResultUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResultFile
        {
            get
            {
                return _ResultFile;
            }
            set
            {
                OnResultFileChanging(value);
                ReportPropertyChanging("ResultFile");
                _ResultFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResultFile");
                OnResultFileChanged();
            }
        }
        private global::System.String _ResultFile;
        partial void OnResultFileChanging(global::System.String value);
        partial void OnResultFileChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Result_Calendar", "Calendar")]
        public Calendar Calendar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calendar>("Sportzly.Model.FK_Result_Calendar", "Calendar").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calendar>("Sportzly.Model.FK_Result_Calendar", "Calendar").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Calendar> CalendarReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calendar>("Sportzly.Model.FK_Result_Calendar", "Calendar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Calendar>("Sportzly.Model.FK_Result_Calendar", "Calendar", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="School")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class School : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new School object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="schoolTypeId">Initial value of the SchoolTypeId property.</param>
        /// <param name="addressId">Initial value of the AddressId property.</param>
        public static School CreateSchool(global::System.Int32 id, global::System.String name, global::System.Int32 schoolTypeId, global::System.Int64 addressId)
        {
            School school = new School();
            school.Id = id;
            school.Name = name;
            school.SchoolTypeId = schoolTypeId;
            school.AddressId = addressId;
            return school;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SchoolTypeId
        {
            get
            {
                return _SchoolTypeId;
            }
            set
            {
                OnSchoolTypeIdChanging(value);
                ReportPropertyChanging("SchoolTypeId");
                _SchoolTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SchoolTypeId");
                OnSchoolTypeIdChanged();
            }
        }
        private global::System.Int32 _SchoolTypeId;
        partial void OnSchoolTypeIdChanging(global::System.Int32 value);
        partial void OnSchoolTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AddressId
        {
            get
            {
                return _AddressId;
            }
            set
            {
                OnAddressIdChanging(value);
                ReportPropertyChanging("AddressId");
                _AddressId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressId");
                OnAddressIdChanged();
            }
        }
        private global::System.Int64 _AddressId;
        partial void OnAddressIdChanging(global::System.Int64 value);
        partial void OnAddressIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Schools_Address", "Address")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("Sportzly.Model.FK_Schools_Address", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("Sportzly.Model.FK_Schools_Address", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("Sportzly.Model.FK_Schools_Address", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("Sportzly.Model.FK_Schools_Address", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Schools_SchoolTypes", "SchoolTypes")]
        public SchoolType SchoolType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolType>("Sportzly.Model.FK_Schools_SchoolTypes", "SchoolTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolType>("Sportzly.Model.FK_Schools_SchoolTypes", "SchoolTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SchoolType> SchoolTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SchoolType>("Sportzly.Model.FK_Schools_SchoolTypes", "SchoolTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SchoolType>("Sportzly.Model.FK_Schools_SchoolTypes", "SchoolTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_UserSchools_Schools", "UserSchools")]
        public EntityCollection<UserSchool> UserSchools
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserSchool>("Sportzly.Model.FK_UserSchools_Schools", "UserSchools");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserSchool>("Sportzly.Model.FK_UserSchools_Schools", "UserSchools", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="SchoolType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SchoolType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SchoolType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="schoolType1">Initial value of the SchoolType1 property.</param>
        public static SchoolType CreateSchoolType(global::System.Int32 id, global::System.String schoolType1)
        {
            SchoolType schoolType = new SchoolType();
            schoolType.Id = id;
            schoolType.SchoolType1 = schoolType1;
            return schoolType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SchoolType1
        {
            get
            {
                return _SchoolType1;
            }
            set
            {
                OnSchoolType1Changing(value);
                ReportPropertyChanging("SchoolType1");
                _SchoolType1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SchoolType1");
                OnSchoolType1Changed();
            }
        }
        private global::System.String _SchoolType1;
        partial void OnSchoolType1Changing(global::System.String value);
        partial void OnSchoolType1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Schools_SchoolTypes", "Schools")]
        public EntityCollection<School> Schools
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<School>("Sportzly.Model.FK_Schools_SchoolTypes", "Schools");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<School>("Sportzly.Model.FK_Schools_SchoolTypes", "Schools", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Sport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sport object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Sport CreateSport(global::System.Int32 id, global::System.String name)
        {
            Sport sport = new Sport();
            sport.Id = id;
            sport.Name = name;
            return sport;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbGroupSports_tbTeamSports", "GroupSports")]
        public EntityCollection<GroupSport> GroupSports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupSport>("Sportzly.Model.FK_tbGroupSports_tbTeamSports", "GroupSports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupSport>("Sportzly.Model.FK_tbGroupSports_tbTeamSports", "GroupSports", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeams_tbTeamSports", "Teams")]
        public EntityCollection<Team> Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team>("Sportzly.Model.FK_tbTeams_tbTeamSports", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team>("Sportzly.Model.FK_tbTeams_tbTeamSports", "Teams", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbUserFavoriteSport_tbTeamSports", "UserFavoriteSport")]
        public EntityCollection<UserFavoriteSport> UserFavoriteSports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserFavoriteSport>("Sportzly.Model.FK_tbUserFavoriteSport_tbTeamSports", "UserFavoriteSport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserFavoriteSport>("Sportzly.Model.FK_tbUserFavoriteSport_tbTeamSports", "UserFavoriteSport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="SportTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SportTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SportTag object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="tag">Initial value of the Tag property.</param>
        /// <param name="tagSign">Initial value of the TagSign property.</param>
        public static SportTag CreateSportTag(global::System.Int32 id, global::System.String tag, global::System.String tagSign)
        {
            SportTag sportTag = new SportTag();
            sportTag.Id = id;
            sportTag.Tag = tag;
            sportTag.TagSign = tagSign;
            return sportTag;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Tag
        {
            get
            {
                return _Tag;
            }
            set
            {
                OnTagChanging(value);
                ReportPropertyChanging("Tag");
                _Tag = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Tag");
                OnTagChanged();
            }
        }
        private global::System.String _Tag;
        partial void OnTagChanging(global::System.String value);
        partial void OnTagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagSign
        {
            get
            {
                return _TagSign;
            }
            set
            {
                OnTagSignChanging(value);
                ReportPropertyChanging("TagSign");
                _TagSign = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TagSign");
                OnTagSignChanged();
            }
        }
        private global::System.String _TagSign;
        partial void OnTagSignChanging(global::System.String value);
        partial void OnTagSignChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbUserSportTag_tbSportTags", "UserSportTags")]
        public EntityCollection<UserSportTag> UserSportTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserSportTag>("Sportzly.Model.FK_tbUserSportTag_tbSportTags", "UserSportTags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserSportTag>("Sportzly.Model.FK_tbUserSportTag_tbSportTags", "UserSportTags", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="ownerId">Initial value of the OwnerId property.</param>
        /// <param name="autoJoin">Initial value of the AutoJoin property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static Team CreateTeam(global::System.Int64 id, global::System.Decimal ownerId, global::System.Boolean autoJoin, global::System.DateTime createDate)
        {
            Team team = new Team();
            team.Id = id;
            team.OwnerId = ownerId;
            team.AutoJoin = autoJoin;
            team.CreateDate = createDate;
            return team;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TeamName
        {
            get
            {
                return _TeamName;
            }
            set
            {
                OnTeamNameChanging(value);
                ReportPropertyChanging("TeamName");
                _TeamName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TeamName");
                OnTeamNameChanged();
            }
        }
        private global::System.String _TeamName;
        partial void OnTeamNameChanging(global::System.String value);
        partial void OnTeamNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private global::System.Decimal _OwnerId;
        partial void OnOwnerIdChanging(global::System.Decimal value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SportId
        {
            get
            {
                return _SportId;
            }
            set
            {
                OnSportIdChanging(value);
                ReportPropertyChanging("SportId");
                _SportId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportId");
                OnSportIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SportId;
        partial void OnSportIdChanging(Nullable<global::System.Int32> value);
        partial void OnSportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryId;
        partial void OnCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Photo
        {
            get
            {
                return _Photo;
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.String _Photo;
        partial void OnPhotoChanging(global::System.String value);
        partial void OnPhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Awards
        {
            get
            {
                return _Awards;
            }
            set
            {
                OnAwardsChanging(value);
                ReportPropertyChanging("Awards");
                _Awards = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Awards");
                OnAwardsChanged();
            }
        }
        private Nullable<global::System.Int32> _Awards;
        partial void OnAwardsChanging(Nullable<global::System.Int32> value);
        partial void OnAwardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AutoJoin
        {
            get
            {
                return _AutoJoin;
            }
            set
            {
                OnAutoJoinChanging(value);
                ReportPropertyChanging("AutoJoin");
                _AutoJoin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoJoin");
                OnAutoJoinChanged();
            }
        }
        private global::System.Boolean _AutoJoin;
        partial void OnAutoJoinChanging(global::System.Boolean value);
        partial void OnAutoJoinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRecruitmentOpen
        {
            get
            {
                return _IsRecruitmentOpen;
            }
            set
            {
                OnIsRecruitmentOpenChanging(value);
                ReportPropertyChanging("IsRecruitmentOpen");
                _IsRecruitmentOpen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRecruitmentOpen");
                OnIsRecruitmentOpenChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRecruitmentOpen;
        partial void OnIsRecruitmentOpenChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRecruitmentOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Season
        {
            get
            {
                return _Season;
            }
            set
            {
                OnSeasonChanging(value);
                ReportPropertyChanging("Season");
                _Season = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Season");
                OnSeasonChanged();
            }
        }
        private global::System.String _Season;
        partial void OnSeasonChanging(global::System.String value);
        partial void OnSeasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PracticeGround
        {
            get
            {
                return _PracticeGround;
            }
            set
            {
                OnPracticeGroundChanging(value);
                ReportPropertyChanging("PracticeGround");
                _PracticeGround = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PracticeGround");
                OnPracticeGroundChanged();
            }
        }
        private global::System.String _PracticeGround;
        partial void OnPracticeGroundChanging(global::System.String value);
        partial void OnPracticeGroundChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsEnabled
        {
            get
            {
                return _IsEnabled;
            }
            set
            {
                OnIsEnabledChanging(value);
                ReportPropertyChanging("IsEnabled");
                _IsEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnabled");
                OnIsEnabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsEnabled;
        partial void OnIsEnabledChanging(Nullable<global::System.Boolean> value);
        partial void OnIsEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ScorecardUrl
        {
            get
            {
                return _ScorecardUrl;
            }
            set
            {
                OnScorecardUrlChanging(value);
                ReportPropertyChanging("ScorecardUrl");
                _ScorecardUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ScorecardUrl");
                OnScorecardUrlChanged();
            }
        }
        private global::System.String _ScorecardUrl;
        partial void OnScorecardUrlChanging(global::System.String value);
        partial void OnScorecardUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPrivate
        {
            get
            {
                return _IsPrivate;
            }
            set
            {
                OnIsPrivateChanging(value);
                ReportPropertyChanging("IsPrivate");
                _IsPrivate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrivate");
                OnIsPrivateChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPrivate;
        partial void OnIsPrivateChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPrivateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_ActivityTeam_Teams", "ActivityTeam")]
        public EntityCollection<ActivityTeam> ActivityTeams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActivityTeam>("Sportzly.Model.FK_ActivityTeam_Teams", "ActivityTeam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActivityTeam>("Sportzly.Model.FK_ActivityTeam_Teams", "ActivityTeam", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbEventTeam_tbTeams", "EventTeam")]
        public EntityCollection<EventTeam> EventTeams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventTeam>("Sportzly.Model.FK_tbEventTeam_tbTeams", "EventTeam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventTeam>("Sportzly.Model.FK_tbEventTeam_tbTeams", "EventTeam", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeams_tbTeamSports", "Sports")]
        public Sport Sport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("Sportzly.Model.FK_tbTeams_tbTeamSports", "Sports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("Sportzly.Model.FK_tbTeams_tbTeamSports", "Sports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> SportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("Sportzly.Model.FK_tbTeams_tbTeamSports", "Sports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("Sportzly.Model.FK_tbTeams_tbTeamSports", "Sports", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeams_tbTeamCategories", "TeamCategories")]
        public TeamCategory TeamCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamCategory>("Sportzly.Model.FK_tbTeams_tbTeamCategories", "TeamCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamCategory>("Sportzly.Model.FK_tbTeams_tbTeamCategories", "TeamCategories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TeamCategory> TeamCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamCategory>("Sportzly.Model.FK_tbTeams_tbTeamCategories", "TeamCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TeamCategory>("Sportzly.Model.FK_tbTeams_tbTeamCategories", "TeamCategories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamFollowers_tbTeams", "TeamFollowers")]
        public EntityCollection<TeamFollower> TeamFollowers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamFollower>("Sportzly.Model.FK_tbTeamFollowers_tbTeams", "TeamFollowers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamFollower>("Sportzly.Model.FK_tbTeamFollowers_tbTeams", "TeamFollowers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamsGames_tbTeams", "TeamGames")]
        public EntityCollection<TeamGame> TeamGames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamGame>("Sportzly.Model.FK_tbTeamsGames_tbTeams", "TeamGames");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamGame>("Sportzly.Model.FK_tbTeamsGames_tbTeams", "TeamGames", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_TeamHistory_Teams", "TeamHistory")]
        public EntityCollection<TeamHistory> TeamHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamHistory>("Sportzly.Model.FK_TeamHistory_Teams", "TeamHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamHistory>("Sportzly.Model.FK_TeamHistory_Teams", "TeamHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamInventory_tbTeams", "TeamInventory")]
        public EntityCollection<TeamInventory> TeamInventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamInventory>("Sportzly.Model.FK_tbTeamInventory_tbTeams", "TeamInventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamInventory>("Sportzly.Model.FK_tbTeamInventory_tbTeams", "TeamInventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamLeagueTeams_tbTeams", "TeamLeagueTeams")]
        public EntityCollection<TeamLeagueTeam> TeamLeagueTeams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamLeagueTeam>("Sportzly.Model.FK_tbTeamLeagueTeams_tbTeams", "TeamLeagueTeams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamLeagueTeam>("Sportzly.Model.FK_tbTeamLeagueTeams_tbTeams", "TeamLeagueTeams", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamMembers_tbTeams", "TeamMembers")]
        public EntityCollection<TeamMember> TeamMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamMember>("Sportzly.Model.FK_tbTeamMembers_tbTeams", "TeamMembers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamMember>("Sportzly.Model.FK_tbTeamMembers_tbTeams", "TeamMembers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamNoticeBoard_tbTeams1", "TeamNoticeBoard")]
        public EntityCollection<TeamNoticeBoard> TeamNoticeBoards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamNoticeBoard>("Sportzly.Model.FK_tbTeamNoticeBoard_tbTeams1", "TeamNoticeBoard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamNoticeBoard>("Sportzly.Model.FK_tbTeamNoticeBoard_tbTeams1", "TeamNoticeBoard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeams_tbUsers", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbTeams_tbUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbTeams_tbUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbTeams_tbUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_tbTeams_tbUsers", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_TeamScheduleDetails_Teams", "TeamScheduleDetails")]
        public EntityCollection<TeamScheduleDetail> TeamScheduleDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamScheduleDetail>("Sportzly.Model.FK_TeamScheduleDetails_Teams", "TeamScheduleDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamScheduleDetail>("Sportzly.Model.FK_TeamScheduleDetails_Teams", "TeamScheduleDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_TeamSchedules_Teams", "TeamSchedules")]
        public EntityCollection<TeamSchedule> TeamSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamSchedule>("Sportzly.Model.FK_TeamSchedules_Teams", "TeamSchedules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamSchedule>("Sportzly.Model.FK_TeamSchedules_Teams", "TeamSchedules", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_InviteEmailaddress_Teams", "InviteEmailaddress")]
        public EntityCollection<InviteEmailaddress> InviteEmailaddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InviteEmailaddress>("Sportzly.Model.FK_InviteEmailaddress_Teams", "InviteEmailaddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InviteEmailaddress>("Sportzly.Model.FK_InviteEmailaddress_Teams", "InviteEmailaddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_TeamAdmin_Teams", "TeamAdmin")]
        public EntityCollection<TeamAdmin> TeamAdmins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamAdmin>("Sportzly.Model.FK_TeamAdmin_Teams", "TeamAdmin");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamAdmin>("Sportzly.Model.FK_TeamAdmin_Teams", "TeamAdmin", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Polls_Teams", "Poll")]
        public EntityCollection<Poll> Polls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Poll>("Sportzly.Model.FK_Polls_Teams", "Poll");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Poll>("Sportzly.Model.FK_Polls_Teams", "Poll", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="TeamAdmin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamAdmin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamAdmin object.
        /// </summary>
        /// <param name="teamOwnerId">Initial value of the TeamOwnerId property.</param>
        /// <param name="teamId">Initial value of the TeamId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static TeamAdmin CreateTeamAdmin(global::System.Int64 teamOwnerId, global::System.Int64 teamId, global::System.Decimal userId)
        {
            TeamAdmin teamAdmin = new TeamAdmin();
            teamAdmin.TeamOwnerId = teamOwnerId;
            teamAdmin.TeamId = teamId;
            teamAdmin.UserId = userId;
            return teamAdmin;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TeamOwnerId
        {
            get
            {
                return _TeamOwnerId;
            }
            set
            {
                if (_TeamOwnerId != value)
                {
                    OnTeamOwnerIdChanging(value);
                    ReportPropertyChanging("TeamOwnerId");
                    _TeamOwnerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TeamOwnerId");
                    OnTeamOwnerIdChanged();
                }
            }
        }
        private global::System.Int64 _TeamOwnerId;
        partial void OnTeamOwnerIdChanging(global::System.Int64 value);
        partial void OnTeamOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private global::System.Int64 _TeamId;
        partial void OnTeamIdChanging(global::System.Int64 value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Decimal _UserId;
        partial void OnUserIdChanging(global::System.Decimal value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_TeamAdmin_Teams", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_TeamAdmin_Teams", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_TeamAdmin_Teams", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_TeamAdmin_Teams", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("Sportzly.Model.FK_TeamAdmin_Teams", "Team", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_TeamAdmin_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_TeamAdmin_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_TeamAdmin_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_TeamAdmin_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_TeamAdmin_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="TeamCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static TeamCategory CreateTeamCategory(global::System.Int32 id, global::System.String name)
        {
            TeamCategory teamCategory = new TeamCategory();
            teamCategory.Id = id;
            teamCategory.Name = name;
            return teamCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeams_tbTeamCategories", "Teams")]
        public EntityCollection<Team> Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team>("Sportzly.Model.FK_tbTeams_tbTeamCategories", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team>("Sportzly.Model.FK_tbTeams_tbTeamCategories", "Teams", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="TeamFollower")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamFollower : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamFollower object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="teamId">Initial value of the TeamId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static TeamFollower CreateTeamFollower(global::System.Decimal id, global::System.Int64 teamId, global::System.Decimal userId)
        {
            TeamFollower teamFollower = new TeamFollower();
            teamFollower.Id = id;
            teamFollower.TeamId = teamId;
            teamFollower.UserId = userId;
            return teamFollower;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private global::System.Int64 _TeamId;
        partial void OnTeamIdChanging(global::System.Int64 value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Decimal _UserId;
        partial void OnUserIdChanging(global::System.Decimal value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamFollowers_tbTeams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbTeamFollowers_tbTeams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbTeamFollowers_tbTeams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbTeamFollowers_tbTeams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("Sportzly.Model.FK_tbTeamFollowers_tbTeams", "Teams", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamFollowers_tbUsers", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbTeamFollowers_tbUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbTeamFollowers_tbUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbTeamFollowers_tbUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_tbTeamFollowers_tbUsers", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="TeamGame")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamGame : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamGame object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="teamId">Initial value of the TeamId property.</param>
        /// <param name="gameDate">Initial value of the GameDate property.</param>
        public static TeamGame CreateTeamGame(global::System.Int64 id, global::System.Int64 teamId, global::System.DateTime gameDate)
        {
            TeamGame teamGame = new TeamGame();
            teamGame.Id = id;
            teamGame.TeamId = teamId;
            teamGame.GameDate = gameDate;
            return teamGame;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private global::System.Int64 _TeamId;
        partial void OnTeamIdChanging(global::System.Int64 value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime GameDate
        {
            get
            {
                return _GameDate;
            }
            set
            {
                OnGameDateChanging(value);
                ReportPropertyChanging("GameDate");
                _GameDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameDate");
                OnGameDateChanged();
            }
        }
        private global::System.DateTime _GameDate;
        partial void OnGameDateChanging(global::System.DateTime value);
        partial void OnGameDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GameSchedule
        {
            get
            {
                return _GameSchedule;
            }
            set
            {
                OnGameScheduleChanging(value);
                ReportPropertyChanging("GameSchedule");
                _GameSchedule = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GameSchedule");
                OnGameScheduleChanged();
            }
        }
        private global::System.String _GameSchedule;
        partial void OnGameScheduleChanging(global::System.String value);
        partial void OnGameScheduleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamsGames_tbTeams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbTeamsGames_tbTeams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbTeamsGames_tbTeams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbTeamsGames_tbTeams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("Sportzly.Model.FK_tbTeamsGames_tbTeams", "Teams", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="TeamHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamHistory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="teamId">Initial value of the TeamId property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="played">Initial value of the Played property.</param>
        /// <param name="win">Initial value of the Win property.</param>
        /// <param name="loss">Initial value of the Loss property.</param>
        public static TeamHistory CreateTeamHistory(global::System.Int64 id, global::System.Int64 teamId, global::System.Int32 year, global::System.Int32 played, global::System.Int32 win, global::System.Int32 loss)
        {
            TeamHistory teamHistory = new TeamHistory();
            teamHistory.Id = id;
            teamHistory.TeamId = teamId;
            teamHistory.Year = year;
            teamHistory.Played = played;
            teamHistory.Win = win;
            teamHistory.Loss = loss;
            return teamHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private global::System.Int64 _TeamId;
        partial void OnTeamIdChanging(global::System.Int64 value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> LeagueId
        {
            get
            {
                return _LeagueId;
            }
            set
            {
                OnLeagueIdChanging(value);
                ReportPropertyChanging("LeagueId");
                _LeagueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueId");
                OnLeagueIdChanged();
            }
        }
        private Nullable<global::System.Int64> _LeagueId;
        partial void OnLeagueIdChanging(Nullable<global::System.Int64> value);
        partial void OnLeagueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Played
        {
            get
            {
                return _Played;
            }
            set
            {
                OnPlayedChanging(value);
                ReportPropertyChanging("Played");
                _Played = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Played");
                OnPlayedChanged();
            }
        }
        private global::System.Int32 _Played;
        partial void OnPlayedChanging(global::System.Int32 value);
        partial void OnPlayedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Win
        {
            get
            {
                return _Win;
            }
            set
            {
                OnWinChanging(value);
                ReportPropertyChanging("Win");
                _Win = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Win");
                OnWinChanged();
            }
        }
        private global::System.Int32 _Win;
        partial void OnWinChanging(global::System.Int32 value);
        partial void OnWinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Loss
        {
            get
            {
                return _Loss;
            }
            set
            {
                OnLossChanging(value);
                ReportPropertyChanging("Loss");
                _Loss = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Loss");
                OnLossChanged();
            }
        }
        private global::System.Int32 _Loss;
        partial void OnLossChanging(global::System.Int32 value);
        partial void OnLossChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_TeamHistory_TeamLeagues", "TeamLeagues")]
        public TeamLeague TeamLeague
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamLeague>("Sportzly.Model.FK_TeamHistory_TeamLeagues", "TeamLeagues").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamLeague>("Sportzly.Model.FK_TeamHistory_TeamLeagues", "TeamLeagues").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TeamLeague> TeamLeagueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamLeague>("Sportzly.Model.FK_TeamHistory_TeamLeagues", "TeamLeagues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TeamLeague>("Sportzly.Model.FK_TeamHistory_TeamLeagues", "TeamLeagues", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_TeamHistory_Teams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_TeamHistory_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_TeamHistory_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_TeamHistory_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("Sportzly.Model.FK_TeamHistory_Teams", "Teams", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="TeamInventory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamInventory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamInventory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="teamId">Initial value of the TeamId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static TeamInventory CreateTeamInventory(global::System.Int64 id, global::System.Int64 teamId, global::System.String name, global::System.Int32 quantity)
        {
            TeamInventory teamInventory = new TeamInventory();
            teamInventory.Id = id;
            teamInventory.TeamId = teamId;
            teamInventory.Name = name;
            teamInventory.Quantity = quantity;
            return teamInventory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private global::System.Int64 _TeamId;
        partial void OnTeamIdChanging(global::System.Int64 value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Brand
        {
            get
            {
                return _Brand;
            }
            set
            {
                OnBrandChanging(value);
                ReportPropertyChanging("Brand");
                _Brand = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Brand");
                OnBrandChanged();
            }
        }
        private global::System.String _Brand;
        partial void OnBrandChanging(global::System.String value);
        partial void OnBrandChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamInventory_tbTeams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbTeamInventory_tbTeams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbTeamInventory_tbTeams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbTeamInventory_tbTeams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("Sportzly.Model.FK_tbTeamInventory_tbTeams", "Teams", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="TeamLeague")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamLeague : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamLeague object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        public static TeamLeague CreateTeamLeague(global::System.Int64 id, global::System.String name, global::System.Int32 year)
        {
            TeamLeague teamLeague = new TeamLeague();
            teamLeague.Id = id;
            teamLeague.Name = name;
            teamLeague.Year = year;
            return teamLeague;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_TeamHistory_TeamLeagues", "TeamHistory")]
        public EntityCollection<TeamHistory> TeamHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamHistory>("Sportzly.Model.FK_TeamHistory_TeamLeagues", "TeamHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamHistory>("Sportzly.Model.FK_TeamHistory_TeamLeagues", "TeamHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamLeagueTeams_tbTeamLeagues", "TeamLeagueTeams")]
        public EntityCollection<TeamLeagueTeam> TeamLeagueTeams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamLeagueTeam>("Sportzly.Model.FK_tbTeamLeagueTeams_tbTeamLeagues", "TeamLeagueTeams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamLeagueTeam>("Sportzly.Model.FK_tbTeamLeagueTeams_tbTeamLeagues", "TeamLeagueTeams", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="TeamLeagueTeam")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamLeagueTeam : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamLeagueTeam object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="leagueId">Initial value of the LeagueId property.</param>
        /// <param name="teamId">Initial value of the TeamId property.</param>
        /// <param name="joinDate">Initial value of the JoinDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static TeamLeagueTeam CreateTeamLeagueTeam(global::System.Decimal id, global::System.Int64 leagueId, global::System.Int64 teamId, global::System.DateTime joinDate, global::System.Boolean isActive)
        {
            TeamLeagueTeam teamLeagueTeam = new TeamLeagueTeam();
            teamLeagueTeam.Id = id;
            teamLeagueTeam.LeagueId = leagueId;
            teamLeagueTeam.TeamId = teamId;
            teamLeagueTeam.JoinDate = joinDate;
            teamLeagueTeam.IsActive = isActive;
            return teamLeagueTeam;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LeagueId
        {
            get
            {
                return _LeagueId;
            }
            set
            {
                OnLeagueIdChanging(value);
                ReportPropertyChanging("LeagueId");
                _LeagueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueId");
                OnLeagueIdChanged();
            }
        }
        private global::System.Int64 _LeagueId;
        partial void OnLeagueIdChanging(global::System.Int64 value);
        partial void OnLeagueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private global::System.Int64 _TeamId;
        partial void OnTeamIdChanging(global::System.Int64 value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime JoinDate
        {
            get
            {
                return _JoinDate;
            }
            set
            {
                OnJoinDateChanging(value);
                ReportPropertyChanging("JoinDate");
                _JoinDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JoinDate");
                OnJoinDateChanged();
            }
        }
        private global::System.DateTime _JoinDate;
        partial void OnJoinDateChanging(global::System.DateTime value);
        partial void OnJoinDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamLeagueTeams_tbTeamLeagues", "TeamLeagues")]
        public TeamLeague TeamLeague
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamLeague>("Sportzly.Model.FK_tbTeamLeagueTeams_tbTeamLeagues", "TeamLeagues").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamLeague>("Sportzly.Model.FK_tbTeamLeagueTeams_tbTeamLeagues", "TeamLeagues").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TeamLeague> TeamLeagueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamLeague>("Sportzly.Model.FK_tbTeamLeagueTeams_tbTeamLeagues", "TeamLeagues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TeamLeague>("Sportzly.Model.FK_tbTeamLeagueTeams_tbTeamLeagues", "TeamLeagues", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamLeagueTeams_tbTeams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbTeamLeagueTeams_tbTeams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbTeamLeagueTeams_tbTeams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbTeamLeagueTeams_tbTeams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("Sportzly.Model.FK_tbTeamLeagueTeams_tbTeams", "Teams", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="TeamMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamMember : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamMember object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static TeamMember CreateTeamMember(global::System.Decimal id)
        {
            TeamMember teamMember = new TeamMember();
            teamMember.Id = id;
            return teamMember;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private Nullable<global::System.Int64> _TeamId;
        partial void OnTeamIdChanging(Nullable<global::System.Int64> value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Decimal> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Decimal> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private Nullable<global::System.Int64> _RoleId;
        partial void OnRoleIdChanging(Nullable<global::System.Int64> value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> JoinDate
        {
            get
            {
                return _JoinDate;
            }
            set
            {
                OnJoinDateChanging(value);
                ReportPropertyChanging("JoinDate");
                _JoinDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JoinDate");
                OnJoinDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _JoinDate;
        partial void OnJoinDateChanging(Nullable<global::System.DateTime> value);
        partial void OnJoinDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsApproved;
        partial void OnIsApprovedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsBlocked
        {
            get
            {
                return _IsBlocked;
            }
            set
            {
                OnIsBlockedChanging(value);
                ReportPropertyChanging("IsBlocked");
                _IsBlocked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBlocked");
                OnIsBlockedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsBlocked;
        partial void OnIsBlockedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsBlockedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamMembers_tbTeamMemberRoles", "TeamMemberRoles")]
        public TeamMemberRole TeamMemberRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamMemberRole>("Sportzly.Model.FK_tbTeamMembers_tbTeamMemberRoles", "TeamMemberRoles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamMemberRole>("Sportzly.Model.FK_tbTeamMembers_tbTeamMemberRoles", "TeamMemberRoles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TeamMemberRole> TeamMemberRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamMemberRole>("Sportzly.Model.FK_tbTeamMembers_tbTeamMemberRoles", "TeamMemberRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TeamMemberRole>("Sportzly.Model.FK_tbTeamMembers_tbTeamMemberRoles", "TeamMemberRoles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamMembers_tbTeams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbTeamMembers_tbTeams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbTeamMembers_tbTeams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbTeamMembers_tbTeams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("Sportzly.Model.FK_tbTeamMembers_tbTeams", "Teams", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamMembers_tbUsers", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbTeamMembers_tbUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbTeamMembers_tbUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbTeamMembers_tbUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_tbTeamMembers_tbUsers", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="TeamMemberRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamMemberRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamMemberRole object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="role">Initial value of the Role property.</param>
        public static TeamMemberRole CreateTeamMemberRole(global::System.Int64 id, global::System.String role)
        {
            TeamMemberRole teamMemberRole = new TeamMemberRole();
            teamMemberRole.Id = id;
            teamMemberRole.Role = role;
            return teamMemberRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                OnRoleChanging(value);
                ReportPropertyChanging("Role");
                _Role = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Role");
                OnRoleChanged();
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamMembers_tbTeamMemberRoles", "TeamMembers")]
        public EntityCollection<TeamMember> TeamMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamMember>("Sportzly.Model.FK_tbTeamMembers_tbTeamMemberRoles", "TeamMembers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamMember>("Sportzly.Model.FK_tbTeamMembers_tbTeamMemberRoles", "TeamMembers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="TeamNoticBoardMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamNoticBoardMember : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamNoticBoardMember object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="noticeBoardId">Initial value of the NoticeBoardId property.</param>
        /// <param name="memberId">Initial value of the MemberId property.</param>
        public static TeamNoticBoardMember CreateTeamNoticBoardMember(global::System.Decimal id, global::System.Int64 noticeBoardId, global::System.Decimal memberId)
        {
            TeamNoticBoardMember teamNoticBoardMember = new TeamNoticBoardMember();
            teamNoticBoardMember.Id = id;
            teamNoticBoardMember.NoticeBoardId = noticeBoardId;
            teamNoticBoardMember.MemberId = memberId;
            return teamNoticBoardMember;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NoticeBoardId
        {
            get
            {
                return _NoticeBoardId;
            }
            set
            {
                OnNoticeBoardIdChanging(value);
                ReportPropertyChanging("NoticeBoardId");
                _NoticeBoardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoticeBoardId");
                OnNoticeBoardIdChanged();
            }
        }
        private global::System.Int64 _NoticeBoardId;
        partial void OnNoticeBoardIdChanging(global::System.Int64 value);
        partial void OnNoticeBoardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MemberId
        {
            get
            {
                return _MemberId;
            }
            set
            {
                OnMemberIdChanging(value);
                ReportPropertyChanging("MemberId");
                _MemberId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberId");
                OnMemberIdChanged();
            }
        }
        private global::System.Decimal _MemberId;
        partial void OnMemberIdChanging(global::System.Decimal value);
        partial void OnMemberIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamNoticBoardMember_tbTeamNoticBoardMember", "TeamNoticeBoard")]
        public TeamNoticeBoard TeamNoticeBoard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamNoticeBoard>("Sportzly.Model.FK_tbTeamNoticBoardMember_tbTeamNoticBoardMember", "TeamNoticeBoard").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamNoticeBoard>("Sportzly.Model.FK_tbTeamNoticBoardMember_tbTeamNoticBoardMember", "TeamNoticeBoard").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TeamNoticeBoard> TeamNoticeBoardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamNoticeBoard>("Sportzly.Model.FK_tbTeamNoticBoardMember_tbTeamNoticBoardMember", "TeamNoticeBoard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TeamNoticeBoard>("Sportzly.Model.FK_tbTeamNoticBoardMember_tbTeamNoticBoardMember", "TeamNoticeBoard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamNoticBoardMember_tbUsers", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbTeamNoticBoardMember_tbUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbTeamNoticBoardMember_tbUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbTeamNoticBoardMember_tbUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_tbTeamNoticBoardMember_tbUsers", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="TeamNoticeBoard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamNoticeBoard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamNoticeBoard object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static TeamNoticeBoard CreateTeamNoticeBoard(global::System.Int64 id, global::System.DateTime createDate)
        {
            TeamNoticeBoard teamNoticeBoard = new TeamNoticeBoard();
            teamNoticeBoard.Id = id;
            teamNoticeBoard.CreateDate = createDate;
            return teamNoticeBoard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private Nullable<global::System.Int64> _TeamId;
        partial void OnTeamIdChanging(Nullable<global::System.Int64> value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private Nullable<global::System.Decimal> _OwnerId;
        partial void OnOwnerIdChanging(Nullable<global::System.Decimal> value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Int64> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Int64> value);
        partial void OnParentIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamNoticBoardMember_tbTeamNoticBoardMember", "TeamNoticBoardMember")]
        public EntityCollection<TeamNoticBoardMember> TeamNoticBoardMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamNoticBoardMember>("Sportzly.Model.FK_tbTeamNoticBoardMember_tbTeamNoticBoardMember", "TeamNoticBoardMember");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamNoticBoardMember>("Sportzly.Model.FK_tbTeamNoticBoardMember_tbTeamNoticBoardMember", "TeamNoticBoardMember", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamNoticeBoard_tbTeams1", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbTeamNoticeBoard_tbTeams1", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbTeamNoticeBoard_tbTeams1", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_tbTeamNoticeBoard_tbTeams1", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("Sportzly.Model.FK_tbTeamNoticeBoard_tbTeams1", "Teams", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamNoticeBoard_tbUsers", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbTeamNoticeBoard_tbUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbTeamNoticeBoard_tbUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbTeamNoticeBoard_tbUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_tbTeamNoticeBoard_tbUsers", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="TeamSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamSchedule object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="teamId">Initial value of the TeamId property.</param>
        /// <param name="season">Initial value of the Season property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        public static TeamSchedule CreateTeamSchedule(global::System.Int64 id, global::System.Int64 teamId, global::System.String season, global::System.Int32 year)
        {
            TeamSchedule teamSchedule = new TeamSchedule();
            teamSchedule.Id = id;
            teamSchedule.TeamId = teamId;
            teamSchedule.Season = season;
            teamSchedule.Year = year;
            return teamSchedule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private global::System.Int64 _TeamId;
        partial void OnTeamIdChanging(global::System.Int64 value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Season
        {
            get
            {
                return _Season;
            }
            set
            {
                OnSeasonChanging(value);
                ReportPropertyChanging("Season");
                _Season = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Season");
                OnSeasonChanged();
            }
        }
        private global::System.String _Season;
        partial void OnSeasonChanging(global::System.String value);
        partial void OnSeasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_TeamSchedules_Teams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_TeamSchedules_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_TeamSchedules_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_TeamSchedules_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("Sportzly.Model.FK_TeamSchedules_Teams", "Teams", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_TeamScheduleDetails_TeamSchedules", "TeamScheduleDetails")]
        public EntityCollection<TeamScheduleDetail> TeamScheduleDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamScheduleDetail>("Sportzly.Model.FK_TeamScheduleDetails_TeamSchedules", "TeamScheduleDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamScheduleDetail>("Sportzly.Model.FK_TeamScheduleDetails_TeamSchedules", "TeamScheduleDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="TeamScheduleDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamScheduleDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamScheduleDetail object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="scheduleId">Initial value of the ScheduleId property.</param>
        /// <param name="playedDate">Initial value of the PlayedDate property.</param>
        /// <param name="opponentId">Initial value of the OpponentId property.</param>
        /// <param name="venue">Initial value of the Venue property.</param>
        public static TeamScheduleDetail CreateTeamScheduleDetail(global::System.Int64 id, global::System.Int64 scheduleId, global::System.DateTime playedDate, global::System.Int64 opponentId, global::System.String venue)
        {
            TeamScheduleDetail teamScheduleDetail = new TeamScheduleDetail();
            teamScheduleDetail.Id = id;
            teamScheduleDetail.ScheduleId = scheduleId;
            teamScheduleDetail.PlayedDate = playedDate;
            teamScheduleDetail.OpponentId = opponentId;
            teamScheduleDetail.Venue = venue;
            return teamScheduleDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ScheduleId
        {
            get
            {
                return _ScheduleId;
            }
            set
            {
                OnScheduleIdChanging(value);
                ReportPropertyChanging("ScheduleId");
                _ScheduleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleId");
                OnScheduleIdChanged();
            }
        }
        private global::System.Int64 _ScheduleId;
        partial void OnScheduleIdChanging(global::System.Int64 value);
        partial void OnScheduleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PlayedDate
        {
            get
            {
                return _PlayedDate;
            }
            set
            {
                OnPlayedDateChanging(value);
                ReportPropertyChanging("PlayedDate");
                _PlayedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlayedDate");
                OnPlayedDateChanged();
            }
        }
        private global::System.DateTime _PlayedDate;
        partial void OnPlayedDateChanging(global::System.DateTime value);
        partial void OnPlayedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OpponentId
        {
            get
            {
                return _OpponentId;
            }
            set
            {
                OnOpponentIdChanging(value);
                ReportPropertyChanging("OpponentId");
                _OpponentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpponentId");
                OnOpponentIdChanged();
            }
        }
        private global::System.Int64 _OpponentId;
        partial void OnOpponentIdChanging(global::System.Int64 value);
        partial void OnOpponentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Venue
        {
            get
            {
                return _Venue;
            }
            set
            {
                OnVenueChanging(value);
                ReportPropertyChanging("Venue");
                _Venue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Venue");
                OnVenueChanged();
            }
        }
        private global::System.String _Venue;
        partial void OnVenueChanging(global::System.String value);
        partial void OnVenueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Result
        {
            get
            {
                return _Result;
            }
            set
            {
                OnResultChanging(value);
                ReportPropertyChanging("Result");
                _Result = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Result");
                OnResultChanged();
            }
        }
        private Nullable<global::System.Int32> _Result;
        partial void OnResultChanging(Nullable<global::System.Int32> value);
        partial void OnResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private global::System.String _Score;
        partial void OnScoreChanging(global::System.String value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ScoreCard
        {
            get
            {
                return _ScoreCard;
            }
            set
            {
                OnScoreCardChanging(value);
                ReportPropertyChanging("ScoreCard");
                _ScoreCard = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ScoreCard");
                OnScoreCardChanged();
            }
        }
        private global::System.String _ScoreCard;
        partial void OnScoreCardChanging(global::System.String value);
        partial void OnScoreCardChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_TeamScheduleDetails_Teams", "Teams")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_TeamScheduleDetails_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_TeamScheduleDetails_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Sportzly.Model.FK_TeamScheduleDetails_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("Sportzly.Model.FK_TeamScheduleDetails_Teams", "Teams", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_TeamScheduleDetails_TeamSchedules", "TeamSchedules")]
        public TeamSchedule TeamSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamSchedule>("Sportzly.Model.FK_TeamScheduleDetails_TeamSchedules", "TeamSchedules").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamSchedule>("Sportzly.Model.FK_TeamScheduleDetails_TeamSchedules", "TeamSchedules").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TeamSchedule> TeamScheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamSchedule>("Sportzly.Model.FK_TeamScheduleDetails_TeamSchedules", "TeamSchedules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TeamSchedule>("Sportzly.Model.FK_TeamScheduleDetails_TeamSchedules", "TeamSchedules", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static User CreateUser(global::System.Decimal id, global::System.String email, global::System.String password)
        {
            User user = new User();
            user.Id = id;
            user.Email = email;
            user.Password = password;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TempPassword
        {
            get
            {
                return _TempPassword;
            }
            set
            {
                OnTempPasswordChanging(value);
                ReportPropertyChanging("TempPassword");
                _TempPassword = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TempPassword");
                OnTempPasswordChanged();
            }
        }
        private global::System.String _TempPassword;
        partial void OnTempPasswordChanging(global::System.String value);
        partial void OnTempPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DOB
        {
            get
            {
                return _DOB;
            }
            set
            {
                OnDOBChanging(value);
                ReportPropertyChanging("DOB");
                _DOB = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DOB");
                OnDOBChanged();
            }
        }
        private Nullable<global::System.DateTime> _DOB;
        partial void OnDOBChanging(Nullable<global::System.DateTime> value);
        partial void OnDOBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GenderId
        {
            get
            {
                return _GenderId;
            }
            set
            {
                OnGenderIdChanging(value);
                ReportPropertyChanging("GenderId");
                _GenderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenderId");
                OnGenderIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GenderId;
        partial void OnGenderIdChanging(Nullable<global::System.Int32> value);
        partial void OnGenderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AddressId
        {
            get
            {
                return _AddressId;
            }
            set
            {
                OnAddressIdChanging(value);
                ReportPropertyChanging("AddressId");
                _AddressId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressId");
                OnAddressIdChanged();
            }
        }
        private Nullable<global::System.Int64> _AddressId;
        partial void OnAddressIdChanging(Nullable<global::System.Int64> value);
        partial void OnAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaritalStatusId
        {
            get
            {
                return _MaritalStatusId;
            }
            set
            {
                OnMaritalStatusIdChanging(value);
                ReportPropertyChanging("MaritalStatusId");
                _MaritalStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaritalStatusId");
                OnMaritalStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MaritalStatusId;
        partial void OnMaritalStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnMaritalStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PhotoId
        {
            get
            {
                return _PhotoId;
            }
            set
            {
                OnPhotoIdChanging(value);
                ReportPropertyChanging("PhotoId");
                _PhotoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoId");
                OnPhotoIdChanged();
            }
        }
        private Nullable<global::System.Int64> _PhotoId;
        partial void OnPhotoIdChanging(Nullable<global::System.Int64> value);
        partial void OnPhotoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Summary
        {
            get
            {
                return _Summary;
            }
            set
            {
                OnSummaryChanging(value);
                ReportPropertyChanging("Summary");
                _Summary = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Summary");
                OnSummaryChanged();
            }
        }
        private global::System.String _Summary;
        partial void OnSummaryChanging(global::System.String value);
        partial void OnSummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLocked
        {
            get
            {
                return _IsLocked;
            }
            set
            {
                OnIsLockedChanging(value);
                ReportPropertyChanging("IsLocked");
                _IsLocked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLocked");
                OnIsLockedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLocked;
        partial void OnIsLockedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsVerified
        {
            get
            {
                return _IsVerified;
            }
            set
            {
                OnIsVerifiedChanging(value);
                ReportPropertyChanging("IsVerified");
                _IsVerified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVerified");
                OnIsVerifiedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsVerified;
        partial void OnIsVerifiedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsVerifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsAdmin
        {
            get
            {
                return _IsAdmin;
            }
            set
            {
                OnIsAdminChanging(value);
                ReportPropertyChanging("IsAdmin");
                _IsAdmin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAdmin");
                OnIsAdminChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsAdmin;
        partial void OnIsAdminChanging(Nullable<global::System.Boolean> value);
        partial void OnIsAdminChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifyDate
        {
            get
            {
                return _LastModifyDate;
            }
            set
            {
                OnLastModifyDateChanging(value);
                ReportPropertyChanging("LastModifyDate");
                _LastModifyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifyDate");
                OnLastModifyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifyDate;
        partial void OnLastModifyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifyDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLoginDate;
        partial void OnLastLoginDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoggedInThrow
        {
            get
            {
                return _LoggedInThrow;
            }
            set
            {
                OnLoggedInThrowChanging(value);
                ReportPropertyChanging("LoggedInThrow");
                _LoggedInThrow = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoggedInThrow");
                OnLoggedInThrowChanged();
            }
        }
        private global::System.String _LoggedInThrow;
        partial void OnLoggedInThrowChanging(global::System.String value);
        partial void OnLoggedInThrowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AutoToken
        {
            get
            {
                return _AutoToken;
            }
            set
            {
                OnAutoTokenChanging(value);
                ReportPropertyChanging("AutoToken");
                _AutoToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AutoToken");
                OnAutoTokenChanged();
            }
        }
        private global::System.String _AutoToken;
        partial void OnAutoTokenChanging(global::System.String value);
        partial void OnAutoTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _Level;
        partial void OnLevelChanging(Nullable<global::System.Int32> value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LevelOther
        {
            get
            {
                return _LevelOther;
            }
            set
            {
                OnLevelOtherChanging(value);
                ReportPropertyChanging("LevelOther");
                _LevelOther = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LevelOther");
                OnLevelOtherChanged();
            }
        }
        private global::System.String _LevelOther;
        partial void OnLevelOtherChanging(global::System.String value);
        partial void OnLevelOtherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Role
        {
            get
            {
                return _Role;
            }
            set
            {
                OnRoleChanging(value);
                ReportPropertyChanging("Role");
                _Role = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Role");
                OnRoleChanged();
            }
        }
        private Nullable<global::System.Int32> _Role;
        partial void OnRoleChanging(Nullable<global::System.Int32> value);
        partial void OnRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleOther
        {
            get
            {
                return _RoleOther;
            }
            set
            {
                OnRoleOtherChanging(value);
                ReportPropertyChanging("RoleOther");
                _RoleOther = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleOther");
                OnRoleOtherChanged();
            }
        }
        private global::System.String _RoleOther;
        partial void OnRoleOtherChanging(global::System.String value);
        partial void OnRoleOtherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Collage
        {
            get
            {
                return _Collage;
            }
            set
            {
                OnCollageChanging(value);
                ReportPropertyChanging("Collage");
                _Collage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Collage");
                OnCollageChanged();
            }
        }
        private global::System.String _Collage;
        partial void OnCollageChanging(global::System.String value);
        partial void OnCollageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HighSchool
        {
            get
            {
                return _HighSchool;
            }
            set
            {
                OnHighSchoolChanging(value);
                ReportPropertyChanging("HighSchool");
                _HighSchool = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HighSchool");
                OnHighSchoolChanged();
            }
        }
        private global::System.String _HighSchool;
        partial void OnHighSchoolChanging(global::System.String value);
        partial void OnHighSchoolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleSchool
        {
            get
            {
                return _MiddleSchool;
            }
            set
            {
                OnMiddleSchoolChanging(value);
                ReportPropertyChanging("MiddleSchool");
                _MiddleSchool = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleSchool");
                OnMiddleSchoolChanged();
            }
        }
        private global::System.String _MiddleSchool;
        partial void OnMiddleSchoolChanging(global::System.String value);
        partial void OnMiddleSchoolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Carrier
        {
            get
            {
                return _Carrier;
            }
            set
            {
                OnCarrierChanging(value);
                ReportPropertyChanging("Carrier");
                _Carrier = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Carrier");
                OnCarrierChanged();
            }
        }
        private Nullable<global::System.Int32> _Carrier;
        partial void OnCarrierChanging(Nullable<global::System.Int32> value);
        partial void OnCarrierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FacebookId
        {
            get
            {
                return _FacebookId;
            }
            set
            {
                OnFacebookIdChanging(value);
                ReportPropertyChanging("FacebookId");
                _FacebookId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FacebookId");
                OnFacebookIdChanged();
            }
        }
        private global::System.String _FacebookId;
        partial void OnFacebookIdChanging(global::System.String value);
        partial void OnFacebookIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TwitterId
        {
            get
            {
                return _TwitterId;
            }
            set
            {
                OnTwitterIdChanging(value);
                ReportPropertyChanging("TwitterId");
                _TwitterId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TwitterId");
                OnTwitterIdChanged();
            }
        }
        private global::System.String _TwitterId;
        partial void OnTwitterIdChanging(global::System.String value);
        partial void OnTwitterIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbActivities_tbUsers", "Activities")]
        public EntityCollection<Activity> Activities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("Sportzly.Model.FK_tbActivities_tbUsers", "Activities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("Sportzly.Model.FK_tbActivities_tbUsers", "Activities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbActivityLikes_tbUsers", "ActivityCheers")]
        public EntityCollection<ActivityCheer> ActivityCheers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActivityCheer>("Sportzly.Model.FK_tbActivityLikes_tbUsers", "ActivityCheers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActivityCheer>("Sportzly.Model.FK_tbActivityLikes_tbUsers", "ActivityCheers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_ActivityPersonal_Users", "ActivityPersonal")]
        public EntityCollection<ActivityPersonal> ActivityPersonals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActivityPersonal>("Sportzly.Model.FK_ActivityPersonal_Users", "ActivityPersonal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActivityPersonal>("Sportzly.Model.FK_ActivityPersonal_Users", "ActivityPersonal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Users_Address", "Address")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("Sportzly.Model.FK_Users_Address", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("Sportzly.Model.FK_Users_Address", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("Sportzly.Model.FK_Users_Address", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("Sportzly.Model.FK_Users_Address", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbAlbumContents_tbUsers", "AlbumPhotos")]
        public EntityCollection<AlbumPhoto> AlbumPhotos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AlbumPhoto>("Sportzly.Model.FK_tbAlbumContents_tbUsers", "AlbumPhotos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AlbumPhoto>("Sportzly.Model.FK_tbAlbumContents_tbUsers", "AlbumPhotos", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbEventPersonal_tbUsers", "EventPersonal")]
        public EntityCollection<EventPersonal> EventPersonals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventPersonal>("Sportzly.Model.FK_tbEventPersonal_tbUsers", "EventPersonal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventPersonal>("Sportzly.Model.FK_tbEventPersonal_tbUsers", "EventPersonal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbEvents_tbUsers", "Events")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("Sportzly.Model.FK_tbEvents_tbUsers", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("Sportzly.Model.FK_tbEvents_tbUsers", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbFollowers_follower", "Followers")]
        public EntityCollection<Follower> Followers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Follower>("Sportzly.Model.FK_tbFollowers_follower", "Followers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Follower>("Sportzly.Model.FK_tbFollowers_follower", "Followers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbFollowers_following", "Followers")]
        public EntityCollection<Follower> Followers1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Follower>("Sportzly.Model.FK_tbFollowers_following", "Followers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Follower>("Sportzly.Model.FK_tbFollowers_following", "Followers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Friends_Users", "Friends")]
        public EntityCollection<Friend> Friends
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Friend>("Sportzly.Model.FK_Friends_Users", "Friends");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Friend>("Sportzly.Model.FK_Friends_Users", "Friends", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbFriends_User", "Friends")]
        public EntityCollection<Friend> Friends1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Friend>("Sportzly.Model.FK_tbFriends_User", "Friends");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Friend>("Sportzly.Model.FK_tbFriends_User", "Friends", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Users_Genders", "Genders")]
        public Gender Gender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("Sportzly.Model.FK_Users_Genders", "Genders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("Sportzly.Model.FK_Users_Genders", "Genders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Gender> GenderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("Sportzly.Model.FK_Users_Genders", "Genders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Gender>("Sportzly.Model.FK_Users_Genders", "Genders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbUserGroups_tbUsers", "GroupMembers")]
        public EntityCollection<GroupMember> GroupMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupMember>("Sportzly.Model.FK_tbUserGroups_tbUsers", "GroupMembers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupMember>("Sportzly.Model.FK_tbUserGroups_tbUsers", "GroupMembers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbGroups_author", "Groups")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("Sportzly.Model.FK_tbGroups_author", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("Sportzly.Model.FK_tbGroups_author", "Groups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbUsers_tbUsers", "MaritalStatus")]
        public MaritalStatu MaritalStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaritalStatu>("Sportzly.Model.FK_tbUsers_tbUsers", "MaritalStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaritalStatu>("Sportzly.Model.FK_tbUsers_tbUsers", "MaritalStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MaritalStatu> MaritalStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaritalStatu>("Sportzly.Model.FK_tbUsers_tbUsers", "MaritalStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MaritalStatu>("Sportzly.Model.FK_tbUsers_tbUsers", "MaritalStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Users_Photos", "Photos")]
        public Photo Photo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("Sportzly.Model.FK_Users_Photos", "Photos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("Sportzly.Model.FK_Users_Photos", "Photos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Photo> PhotoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("Sportzly.Model.FK_Users_Photos", "Photos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Photo>("Sportzly.Model.FK_Users_Photos", "Photos", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamFollowers_tbUsers", "TeamFollowers")]
        public EntityCollection<TeamFollower> TeamFollowers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamFollower>("Sportzly.Model.FK_tbTeamFollowers_tbUsers", "TeamFollowers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamFollower>("Sportzly.Model.FK_tbTeamFollowers_tbUsers", "TeamFollowers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamMembers_tbUsers", "TeamMembers")]
        public EntityCollection<TeamMember> TeamMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamMember>("Sportzly.Model.FK_tbTeamMembers_tbUsers", "TeamMembers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamMember>("Sportzly.Model.FK_tbTeamMembers_tbUsers", "TeamMembers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamNoticBoardMember_tbUsers", "TeamNoticBoardMember")]
        public EntityCollection<TeamNoticBoardMember> TeamNoticBoardMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamNoticBoardMember>("Sportzly.Model.FK_tbTeamNoticBoardMember_tbUsers", "TeamNoticBoardMember");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamNoticBoardMember>("Sportzly.Model.FK_tbTeamNoticBoardMember_tbUsers", "TeamNoticBoardMember", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeamNoticeBoard_tbUsers", "TeamNoticeBoard")]
        public EntityCollection<TeamNoticeBoard> TeamNoticeBoards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamNoticeBoard>("Sportzly.Model.FK_tbTeamNoticeBoard_tbUsers", "TeamNoticeBoard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamNoticeBoard>("Sportzly.Model.FK_tbTeamNoticeBoard_tbUsers", "TeamNoticeBoard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbTeams_tbUsers", "Teams")]
        public EntityCollection<Team> Teams1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team>("Sportzly.Model.FK_tbTeams_tbUsers", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team>("Sportzly.Model.FK_tbTeams_tbUsers", "Teams", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbUserFavoriteSport_tbUsers", "UserFavoriteSport")]
        public EntityCollection<UserFavoriteSport> UserFavoriteSports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserFavoriteSport>("Sportzly.Model.FK_tbUserFavoriteSport_tbUsers", "UserFavoriteSport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserFavoriteSport>("Sportzly.Model.FK_tbUserFavoriteSport_tbUsers", "UserFavoriteSport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_UserMetrics_Users", "UserMetrics")]
        public EntityCollection<UserMetric> UserMetrics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserMetric>("Sportzly.Model.FK_UserMetrics_Users", "UserMetrics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserMetric>("Sportzly.Model.FK_UserMetrics_Users", "UserMetrics", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbUserSportTag_tbUsers", "UserSportTags")]
        public EntityCollection<UserSportTag> UserSportTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserSportTag>("Sportzly.Model.FK_tbUserSportTag_tbUsers", "UserSportTags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserSportTag>("Sportzly.Model.FK_tbUserSportTag_tbUsers", "UserSportTags", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_UserSchools_Users", "UserSchools")]
        public EntityCollection<UserSchool> UserSchools
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserSchool>("Sportzly.Model.FK_UserSchools_Users", "UserSchools");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserSchool>("Sportzly.Model.FK_UserSchools_Users", "UserSchools", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_UserSocialLinks_Users", "UserSocialLinks")]
        public EntityCollection<UserSocialLink> UserSocialLinks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserSocialLink>("Sportzly.Model.FK_UserSocialLinks_Users", "UserSocialLinks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserSocialLink>("Sportzly.Model.FK_UserSocialLinks_Users", "UserSocialLinks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Awards_Users", "Award")]
        public EntityCollection<Award> Awards1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Award>("Sportzly.Model.FK_Awards_Users", "Award");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Award>("Sportzly.Model.FK_Awards_Users", "Award", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_DocumentTitle_Users", "DocumentTitle")]
        public EntityCollection<DocumentTitle> DocumentTitles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DocumentTitle>("Sportzly.Model.FK_DocumentTitle_Users", "DocumentTitle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DocumentTitle>("Sportzly.Model.FK_DocumentTitle_Users", "DocumentTitle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Files_Users", "File")]
        public EntityCollection<DocFile> Files
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DocFile>("Sportzly.Model.FK_Files_Users", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DocFile>("Sportzly.Model.FK_Files_Users", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Users_Carrier", "Carrier")]
        public Carrier Carrier1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Sportzly.Model.FK_Users_Carrier", "Carrier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Sportzly.Model.FK_Users_Carrier", "Carrier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carrier> Carrier1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("Sportzly.Model.FK_Users_Carrier", "Carrier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carrier>("Sportzly.Model.FK_Users_Carrier", "Carrier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Users_Users", "User1")]
        public User Users1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Users_Users", "User1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Users_Users", "User1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> Users1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Users_Users", "User1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_Users_Users", "User1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Users_Users", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Users_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Users_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Users_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_Users_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_InviteEmailaddress_Users", "InviteEmailaddress")]
        public EntityCollection<InviteEmailaddress> InviteEmailaddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InviteEmailaddress>("Sportzly.Model.FK_InviteEmailaddress_Users", "InviteEmailaddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InviteEmailaddress>("Sportzly.Model.FK_InviteEmailaddress_Users", "InviteEmailaddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Calendar_Users", "Calendar")]
        public EntityCollection<Calendar> Calendars
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Calendar>("Sportzly.Model.FK_Calendar_Users", "Calendar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Calendar>("Sportzly.Model.FK_Calendar_Users", "Calendar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_TeamAdmin_Users", "TeamAdmin")]
        public EntityCollection<TeamAdmin> TeamAdmins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamAdmin>("Sportzly.Model.FK_TeamAdmin_Users", "TeamAdmin");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamAdmin>("Sportzly.Model.FK_TeamAdmin_Users", "TeamAdmin", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Polls_Users", "Poll")]
        public EntityCollection<Poll> Polls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Poll>("Sportzly.Model.FK_Polls_Users", "Poll");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Poll>("Sportzly.Model.FK_Polls_Users", "Poll", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Votes_Users", "Vote")]
        public EntityCollection<Vote> Votes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vote>("Sportzly.Model.FK_Votes_Users", "Vote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vote>("Sportzly.Model.FK_Votes_Users", "Vote", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="UserFavoriteSport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserFavoriteSport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserFavoriteSport object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sportId">Initial value of the SportId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static UserFavoriteSport CreateUserFavoriteSport(global::System.Decimal id, global::System.Int32 sportId, global::System.Decimal userId)
        {
            UserFavoriteSport userFavoriteSport = new UserFavoriteSport();
            userFavoriteSport.Id = id;
            userFavoriteSport.SportId = sportId;
            userFavoriteSport.UserId = userId;
            return userFavoriteSport;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportId
        {
            get
            {
                return _SportId;
            }
            set
            {
                OnSportIdChanging(value);
                ReportPropertyChanging("SportId");
                _SportId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportId");
                OnSportIdChanged();
            }
        }
        private global::System.Int32 _SportId;
        partial void OnSportIdChanging(global::System.Int32 value);
        partial void OnSportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Decimal _UserId;
        partial void OnUserIdChanging(global::System.Decimal value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbUserFavoriteSport_tbTeamSports", "Sports")]
        public Sport Sport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("Sportzly.Model.FK_tbUserFavoriteSport_tbTeamSports", "Sports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("Sportzly.Model.FK_tbUserFavoriteSport_tbTeamSports", "Sports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sport> SportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sport>("Sportzly.Model.FK_tbUserFavoriteSport_tbTeamSports", "Sports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sport>("Sportzly.Model.FK_tbUserFavoriteSport_tbTeamSports", "Sports", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbUserFavoriteSport_tbUsers", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbUserFavoriteSport_tbUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbUserFavoriteSport_tbUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbUserFavoriteSport_tbUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_tbUserFavoriteSport_tbUsers", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="UserMetric")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserMetric : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserMetric object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="metricId">Initial value of the MetricId property.</param>
        public static UserMetric CreateUserMetric(global::System.Int64 id, global::System.Decimal userId, global::System.Int64 metricId)
        {
            UserMetric userMetric = new UserMetric();
            userMetric.Id = id;
            userMetric.UserId = userId;
            userMetric.MetricId = metricId;
            return userMetric;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Decimal _UserId;
        partial void OnUserIdChanging(global::System.Decimal value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MetricId
        {
            get
            {
                return _MetricId;
            }
            set
            {
                OnMetricIdChanging(value);
                ReportPropertyChanging("MetricId");
                _MetricId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MetricId");
                OnMetricIdChanged();
            }
        }
        private global::System.Int64 _MetricId;
        partial void OnMetricIdChanging(global::System.Int64 value);
        partial void OnMetricIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_UserMetrics_Metrics", "Metrics")]
        public Metric Metric
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Metric>("Sportzly.Model.FK_UserMetrics_Metrics", "Metrics").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Metric>("Sportzly.Model.FK_UserMetrics_Metrics", "Metrics").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Metric> MetricReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Metric>("Sportzly.Model.FK_UserMetrics_Metrics", "Metrics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Metric>("Sportzly.Model.FK_UserMetrics_Metrics", "Metrics", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_UserMetrics_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_UserMetrics_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_UserMetrics_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_UserMetrics_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_UserMetrics_Users", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="UserSchool")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserSchool : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserSchool object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="schoolId">Initial value of the SchoolId property.</param>
        /// <param name="dateStart">Initial value of the DateStart property.</param>
        public static UserSchool CreateUserSchool(global::System.Int32 id, global::System.Decimal userId, global::System.Int32 schoolId, global::System.DateTime dateStart)
        {
            UserSchool userSchool = new UserSchool();
            userSchool.Id = id;
            userSchool.UserId = userId;
            userSchool.SchoolId = schoolId;
            userSchool.DateStart = dateStart;
            return userSchool;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Decimal _UserId;
        partial void OnUserIdChanging(global::System.Decimal value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SchoolId
        {
            get
            {
                return _SchoolId;
            }
            set
            {
                OnSchoolIdChanging(value);
                ReportPropertyChanging("SchoolId");
                _SchoolId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SchoolId");
                OnSchoolIdChanged();
            }
        }
        private global::System.Int32 _SchoolId;
        partial void OnSchoolIdChanging(global::System.Int32 value);
        partial void OnSchoolIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateStart
        {
            get
            {
                return _DateStart;
            }
            set
            {
                OnDateStartChanging(value);
                ReportPropertyChanging("DateStart");
                _DateStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateStart");
                OnDateStartChanged();
            }
        }
        private global::System.DateTime _DateStart;
        partial void OnDateStartChanging(global::System.DateTime value);
        partial void OnDateStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEnd
        {
            get
            {
                return _DateEnd;
            }
            set
            {
                OnDateEndChanging(value);
                ReportPropertyChanging("DateEnd");
                _DateEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEnd");
                OnDateEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEnd;
        partial void OnDateEndChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEndChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_UserSchools_Schools", "Schools")]
        public School School
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<School>("Sportzly.Model.FK_UserSchools_Schools", "Schools").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<School>("Sportzly.Model.FK_UserSchools_Schools", "Schools").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<School> SchoolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<School>("Sportzly.Model.FK_UserSchools_Schools", "Schools");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<School>("Sportzly.Model.FK_UserSchools_Schools", "Schools", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_UserSchools_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_UserSchools_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_UserSchools_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_UserSchools_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_UserSchools_Users", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="UserSocialLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserSocialLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserSocialLink object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="socialEmailPermission">Initial value of the SocialEmailPermission property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static UserSocialLink CreateUserSocialLink(global::System.Int64 id, global::System.Boolean socialEmailPermission, global::System.Decimal userId)
        {
            UserSocialLink userSocialLink = new UserSocialLink();
            userSocialLink.Id = id;
            userSocialLink.SocialEmailPermission = socialEmailPermission;
            userSocialLink.UserId = userId;
            return userSocialLink;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SocialId
        {
            get
            {
                return _SocialId;
            }
            set
            {
                OnSocialIdChanging(value);
                ReportPropertyChanging("SocialId");
                _SocialId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SocialId");
                OnSocialIdChanged();
            }
        }
        private global::System.String _SocialId;
        partial void OnSocialIdChanging(global::System.String value);
        partial void OnSocialIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SocialEmailPermission
        {
            get
            {
                return _SocialEmailPermission;
            }
            set
            {
                OnSocialEmailPermissionChanging(value);
                ReportPropertyChanging("SocialEmailPermission");
                _SocialEmailPermission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SocialEmailPermission");
                OnSocialEmailPermissionChanged();
            }
        }
        private global::System.Boolean _SocialEmailPermission;
        partial void OnSocialEmailPermissionChanging(global::System.Boolean value);
        partial void OnSocialEmailPermissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SocialAuthToken
        {
            get
            {
                return _SocialAuthToken;
            }
            set
            {
                OnSocialAuthTokenChanging(value);
                ReportPropertyChanging("SocialAuthToken");
                _SocialAuthToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SocialAuthToken");
                OnSocialAuthTokenChanged();
            }
        }
        private global::System.String _SocialAuthToken;
        partial void OnSocialAuthTokenChanging(global::System.String value);
        partial void OnSocialAuthTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Decimal _UserId;
        partial void OnUserIdChanging(global::System.Decimal value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_UserSocialLinks_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_UserSocialLinks_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_UserSocialLinks_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_UserSocialLinks_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_UserSocialLinks_Users", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="UserSportTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserSportTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserSportTag object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sportTagId">Initial value of the SportTagId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static UserSportTag CreateUserSportTag(global::System.Decimal id, global::System.Int32 sportTagId, global::System.Decimal userId)
        {
            UserSportTag userSportTag = new UserSportTag();
            userSportTag.Id = id;
            userSportTag.SportTagId = sportTagId;
            userSportTag.UserId = userId;
            return userSportTag;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportTagId
        {
            get
            {
                return _SportTagId;
            }
            set
            {
                OnSportTagIdChanging(value);
                ReportPropertyChanging("SportTagId");
                _SportTagId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SportTagId");
                OnSportTagIdChanged();
            }
        }
        private global::System.Int32 _SportTagId;
        partial void OnSportTagIdChanging(global::System.Int32 value);
        partial void OnSportTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Decimal _UserId;
        partial void OnUserIdChanging(global::System.Decimal value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbUserSportTag_tbSportTags", "SportTags")]
        public SportTag SportTag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportTag>("Sportzly.Model.FK_tbUserSportTag_tbSportTags", "SportTags").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportTag>("Sportzly.Model.FK_tbUserSportTag_tbSportTags", "SportTags").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SportTag> SportTagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportTag>("Sportzly.Model.FK_tbUserSportTag_tbSportTags", "SportTags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SportTag>("Sportzly.Model.FK_tbUserSportTag_tbSportTags", "SportTags", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_tbUserSportTag_tbUsers", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbUserSportTag_tbUsers", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbUserSportTag_tbUsers", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_tbUserSportTag_tbUsers", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_tbUserSportTag_tbUsers", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Video")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Video : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Video object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="ownerId">Initial value of the OwnerId property.</param>
        /// <param name="youtubeId">Initial value of the YoutubeId property.</param>
        /// <param name="isPublic">Initial value of the IsPublic property.</param>
        /// <param name="postDate">Initial value of the PostDate property.</param>
        public static Video CreateVideo(global::System.Int64 id, global::System.Decimal ownerId, global::System.String youtubeId, global::System.Boolean isPublic, global::System.DateTime postDate)
        {
            Video video = new Video();
            video.Id = id;
            video.OwnerId = ownerId;
            video.YoutubeId = youtubeId;
            video.IsPublic = isPublic;
            video.PostDate = postDate;
            return video;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private global::System.Decimal _OwnerId;
        partial void OnOwnerIdChanging(global::System.Decimal value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String YoutubeId
        {
            get
            {
                return _YoutubeId;
            }
            set
            {
                OnYoutubeIdChanging(value);
                ReportPropertyChanging("YoutubeId");
                _YoutubeId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("YoutubeId");
                OnYoutubeIdChanged();
            }
        }
        private global::System.String _YoutubeId;
        partial void OnYoutubeIdChanging(global::System.String value);
        partial void OnYoutubeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UrlPath
        {
            get
            {
                return _UrlPath;
            }
            set
            {
                OnUrlPathChanging(value);
                ReportPropertyChanging("UrlPath");
                _UrlPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UrlPath");
                OnUrlPathChanged();
            }
        }
        private global::System.String _UrlPath;
        partial void OnUrlPathChanging(global::System.String value);
        partial void OnUrlPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CheerCount
        {
            get
            {
                return _CheerCount;
            }
            set
            {
                OnCheerCountChanging(value);
                ReportPropertyChanging("CheerCount");
                _CheerCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheerCount");
                OnCheerCountChanged();
            }
        }
        private Nullable<global::System.Int32> _CheerCount;
        partial void OnCheerCountChanging(Nullable<global::System.Int32> value);
        partial void OnCheerCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JeerCount
        {
            get
            {
                return _JeerCount;
            }
            set
            {
                OnJeerCountChanging(value);
                ReportPropertyChanging("JeerCount");
                _JeerCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JeerCount");
                OnJeerCountChanged();
            }
        }
        private Nullable<global::System.Int32> _JeerCount;
        partial void OnJeerCountChanging(Nullable<global::System.Int32> value);
        partial void OnJeerCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPublic
        {
            get
            {
                return _IsPublic;
            }
            set
            {
                OnIsPublicChanging(value);
                ReportPropertyChanging("IsPublic");
                _IsPublic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPublic");
                OnIsPublicChanged();
            }
        }
        private global::System.Boolean _IsPublic;
        partial void OnIsPublicChanging(global::System.Boolean value);
        partial void OnIsPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PostDate
        {
            get
            {
                return _PostDate;
            }
            set
            {
                OnPostDateChanging(value);
                ReportPropertyChanging("PostDate");
                _PostDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostDate");
                OnPostDateChanged();
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnPostDateChanging(global::System.DateTime value);
        partial void OnPostDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Activities_Videos", "Activity")]
        public EntityCollection<Activity> Activities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("Sportzly.Model.FK_Activities_Videos", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("Sportzly.Model.FK_Activities_Videos", "Activity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Sportzly.Model", Name="Vote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vote object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Vote CreateVote(global::System.Int64 id)
        {
            Vote vote = new Vote();
            vote.ID = id;
            return vote;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> OptionId
        {
            get
            {
                return _OptionId;
            }
            set
            {
                OnOptionIdChanging(value);
                ReportPropertyChanging("OptionId");
                _OptionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OptionId");
                OnOptionIdChanged();
            }
        }
        private Nullable<global::System.Int64> _OptionId;
        partial void OnOptionIdChanging(Nullable<global::System.Int64> value);
        partial void OnOptionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Decimal> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Decimal> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PolIId
        {
            get
            {
                return _PolIId;
            }
            set
            {
                OnPolIIdChanging(value);
                ReportPropertyChanging("PolIId");
                _PolIId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolIId");
                OnPolIIdChanged();
            }
        }
        private Nullable<global::System.Int64> _PolIId;
        partial void OnPolIIdChanging(Nullable<global::System.Int64> value);
        partial void OnPolIIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Votes_PollOptions", "PollOption")]
        public PollOption PollOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PollOption>("Sportzly.Model.FK_Votes_PollOptions", "PollOption").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PollOption>("Sportzly.Model.FK_Votes_PollOptions", "PollOption").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PollOption> PollOptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PollOption>("Sportzly.Model.FK_Votes_PollOptions", "PollOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PollOption>("Sportzly.Model.FK_Votes_PollOptions", "PollOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Votes_Polls", "Poll")]
        public Poll Poll
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("Sportzly.Model.FK_Votes_Polls", "Poll").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("Sportzly.Model.FK_Votes_Polls", "Poll").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Poll> PollReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("Sportzly.Model.FK_Votes_Polls", "Poll");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Poll>("Sportzly.Model.FK_Votes_Polls", "Poll", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sportzly.Model", "FK_Votes_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Votes_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Votes_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Sportzly.Model.FK_Votes_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Sportzly.Model.FK_Votes_Users", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}

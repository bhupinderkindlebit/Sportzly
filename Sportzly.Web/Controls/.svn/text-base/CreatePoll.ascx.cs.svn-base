using Sportzly.BusinessEntities.BusinessEntity;
using Sportzly.BusinessEntities.QueryEntity;
using Sportzly.Framework.Attributes;
using Sportzly.Web.Common;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace Sportzly.Web.Controls
{
    public partial class CreatePoll : BaseUserControl<CreatePoll>
    {
        PollQuery pollQuery = new PollQuery();
        PollEntity pollObj = null;

        protected void Page_Load(object sender, EventArgs e)
        {
            var pollIdStr = Request.QueryString.Get("id");
            long pollId;
            long teamId = 0;
            long.TryParse(pollIdStr, out pollId);
            ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "poll",
                      string.Format(" var pollId = '{0}';", pollId), true);


            string teamStr = Request.Url.Query;

            if (!string.IsNullOrEmpty(teamStr))
            {
                Int64.TryParse(teamStr.Replace("?", ""), out teamId);
                ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "teamId",
                string.Format(" var teamId = {0};", teamId), true);
            }

            if (Page.IsPostBack)
            {
                SavePoll(pollId, teamId);
            }

            else
            {

            }
        }

        private void LoadPoll(long pollId)
        {
            var result = ApiMethods.GetPollData(pollId, CurrentUser.UserKey.ToString());
            pollObj = result.Results.FirstOrDefault();
            if (pollObj != null)
            {
                this.pollQuestion.Value = pollObj.PollQuestion;
                this.dateExpiry.Value = pollObj.PollExpiry.ToShortDateString();
                this.chActive.Checked = pollObj.PollActive;

                pollObj.PollOptions.ForEach(rs => ddlOptions.Items.Add(new ListItem()
                {
                    Text = rs.OptionDetails,
                    Value = rs.OptionId.ToString()
                }));
            }
        }

        public void SavePoll(long pollId, long teamId)
        {
            var d = this.dateExpiry.Value + " 12:00:00";
            DateTime pollExpiry = Convert.ToDateTime(d);
            bool IsActive = Convert.ToBoolean(this.chActive.Checked);
            string Question = this.pollQuestion.Value;
            var answers = new List<string>();
            foreach (var opt in hdAwards.Value.Trim(';').Split(';'))
            {
                answers.Add(opt);
            }

            pollQuery.Question = Question;
            pollQuery.Active = IsActive;
            pollQuery.Answers = answers;
            pollQuery.ExpiryDate = pollExpiry;
            pollQuery.PollId = pollId;
            pollQuery.TeamId = teamId;
            HttpCookie cookie = Request.Cookies.Get("__sportzly");
            try
            {
                var result = ApiMethods.SavePoll(CurrentUser.UserKey.ToString(), pollQuery);
                pollObj = result.Results.FirstOrDefault();
                //if (pollObj.PollId != 0)
                //{
                    successPanel.InnerText = "Poll is successfully created";
                    errorPanel.InnerText = string.Empty;
                //}
            }
            catch (Exception ex)
            {
                successPanel.InnerText = string.Empty;
                errorPanel.InnerText = ex.Message;
                return;
            }
        }
    }
}